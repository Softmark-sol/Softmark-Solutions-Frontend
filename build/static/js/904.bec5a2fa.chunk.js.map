{"version":3,"file":"static/js/904.bec5a2fa.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/MoveDirection.js","../node_modules/@tsparticles/engine/browser/Utils/TypeUtils.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Vectors.js","../node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/AnimationMode.js","../node_modules/@tsparticles/engine/browser/Enums/AnimationStatus.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DestroyType.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/OutModeDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/PixelMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/StartValueType.js","../node_modules/@tsparticles/engine/browser/Utils/Utils.js","../node_modules/@tsparticles/engine/browser/Enums/Types/AlterType.js","../node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js","../node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js","../node_modules/@tsparticles/engine/browser/Core/Canvas.js","../node_modules/@tsparticles/engine/browser/Enums/InteractivityDetect.js","../node_modules/@tsparticles/engine/browser/Core/Utils/EventListeners.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EventType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/DivType.js","../node_modules/@tsparticles/engine/browser/Options/Classes/OptionsColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Background/Background.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/@tsparticles/engine/browser/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/@tsparticles/engine/browser/Options/Classes/FullScreen/FullScreen.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Events/Events.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ManualParticle.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ResponsiveMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/ThemeMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/CollisionMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/OutMode.js","../node_modules/@tsparticles/engine/browser/Enums/Modes/LimitMode.js","../node_modules/@tsparticles/engine/browser/Enums/Types/InteractorType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/ParticleOutType.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Responsive.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/ThemeDefault.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Theme/Theme.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimationOptions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ColorAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/HslAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/AnimatableColor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/@tsparticles/engine/browser/Options/Classes/ValueWithRandom.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Effect/Effect.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/OutModes.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Spin.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Move/Move.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumberLimit.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shadow.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Shape/Shape.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Size/Size.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/Stroke.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Particles/ParticlesOptions.js","../node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js","../node_modules/@tsparticles/engine/browser/Options/Classes/Options.js","../node_modules/@tsparticles/engine/browser/Core/Utils/InteractionManager.js","../node_modules/@tsparticles/engine/browser/Core/Particle.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Point.js","../node_modules/@tsparticles/engine/browser/Types/RangeType.js","../node_modules/@tsparticles/engine/browser/Core/Utils/Ranges.js","../node_modules/@tsparticles/engine/browser/Core/Utils/QuadTree.js","../node_modules/@tsparticles/engine/browser/Core/Particles.js","../node_modules/@tsparticles/engine/browser/Core/Retina.js","../node_modules/@tsparticles/engine/browser/Core/Container.js","../node_modules/@tsparticles/engine/browser/Utils/EventDispatcher.js","../node_modules/@tsparticles/engine/browser/Core/Engine.js","../node_modules/@tsparticles/engine/browser/Utils/HslColorManager.js","../node_modules/@tsparticles/engine/browser/Utils/RgbColorManager.js","../node_modules/@tsparticles/engine/browser/Enums/Directions/RotateDirection.js","../node_modules/@tsparticles/engine/browser/Enums/Types/GradientType.js","../node_modules/@tsparticles/engine/browser/Enums/Types/EasingType.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ExternalInteractorBase.js","../node_modules/@tsparticles/engine/browser/Core/Utils/ParticlesInteractorBase.js","../node_modules/@tsparticles/engine/browser/index.js","../node_modules/@tsparticles/engine/browser/init.js","../node_modules/@tsparticles/react/dist/Particles.js","../node_modules/@tsparticles/react/dist/index.js","../node_modules/@tsparticles/move-base/browser/Utils.js","../node_modules/@tsparticles/move-base/browser/BaseMover.js","../node_modules/@tsparticles/shape-circle/browser/Utils.js","../node_modules/@tsparticles/shape-circle/browser/CircleDrawer.js","../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js","../node_modules/@tsparticles/updater-opacity/browser/OpacityUpdater.js","../node_modules/@tsparticles/updater-out-modes/browser/BounceOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/Utils.js","../node_modules/@tsparticles/updater-out-modes/browser/DestroyOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/NoneOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOutMode.js","../node_modules/@tsparticles/updater-out-modes/browser/OutOfCanvasUpdater.js","../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js","../node_modules/@tsparticles/basic/browser/index.js","../node_modules/@tsparticles/move-base/browser/index.js","../node_modules/@tsparticles/shape-circle/browser/index.js","../node_modules/@tsparticles/updater-color/browser/index.js","../node_modules/@tsparticles/updater-opacity/browser/index.js","../node_modules/@tsparticles/updater-out-modes/browser/index.js","../node_modules/@tsparticles/updater-size/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/EmojiDrawer.js","../node_modules/@tsparticles/shape-emoji/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js","../node_modules/@tsparticles/interaction-external-attract/browser/Options/Classes/Attract.js","../node_modules/@tsparticles/interaction-external-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Options/Classes/Bounce.js","../node_modules/@tsparticles/interaction-external-bounce/browser/Bouncer.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleBase.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/BubbleDiv.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Options/Classes/Bubble.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Enums.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Utils.js","../node_modules/@tsparticles/interaction-external-bubble/browser/Bubbler.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/ConnectLinks.js","../node_modules/@tsparticles/interaction-external-connect/browser/Options/Classes/Connect.js","../node_modules/@tsparticles/interaction-external-connect/browser/Utils.js","../node_modules/@tsparticles/interaction-external-connect/browser/Connector.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/GrabLinks.js","../node_modules/@tsparticles/interaction-external-grab/browser/Options/Classes/Grab.js","../node_modules/@tsparticles/interaction-external-grab/browser/Utils.js","../node_modules/@tsparticles/interaction-external-grab/browser/Grabber.js","../node_modules/@tsparticles/interaction-external-pause/browser/Pauser.js","../node_modules/@tsparticles/interaction-external-push/browser/Options/Classes/Push.js","../node_modules/@tsparticles/interaction-external-push/browser/Pusher.js","../node_modules/@tsparticles/interaction-external-remove/browser/Options/Classes/Remove.js","../node_modules/@tsparticles/interaction-external-remove/browser/Remover.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseBase.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/RepulseDiv.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Options/Classes/Repulse.js","../node_modules/@tsparticles/interaction-external-repulse/browser/Repulser.js","../node_modules/@tsparticles/interaction-external-slow/browser/Options/Classes/Slow.js","../node_modules/@tsparticles/interaction-external-slow/browser/Slower.js","../node_modules/@tsparticles/shape-image/browser/Utils.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Constants.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/ByteStream.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Enums/DisposalMethod.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Types/GIFDataHeaders.js","../node_modules/@tsparticles/shape-image/browser/GifUtils/Utils.js","../node_modules/@tsparticles/shape-image/browser/ImageDrawer.js","../node_modules/@tsparticles/shape-image/browser/Options/Classes/Preload.js","../node_modules/@tsparticles/shape-image/browser/ImagePreloader.js","../node_modules/@tsparticles/shape-image/browser/index.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDelay.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/LifeDuration.js","../node_modules/@tsparticles/updater-life/browser/Options/Classes/Life.js","../node_modules/@tsparticles/updater-life/browser/LifeUpdater.js","../node_modules/@tsparticles/updater-life/browser/Utils.js","../node_modules/@tsparticles/shape-line/browser/LineDrawer.js","../node_modules/@tsparticles/shape-line/browser/Utils.js","../node_modules/@tsparticles/move-parallax/browser/ParallaxMover.js","../node_modules/@tsparticles/interaction-particles-attract/browser/Attractor.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Absorb.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Bounce.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Destroy.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js","../node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksShadow.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/LinksTriangle.js","../node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js","../node_modules/@tsparticles/interaction-particles-links/browser/Linker.js","../node_modules/@tsparticles/interaction-particles-links/browser/Utils.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinkInstance.js","../node_modules/@tsparticles/interaction-particles-links/browser/LinksPlugin.js","../node_modules/@tsparticles/interaction-particles-links/browser/index.js","../node_modules/@tsparticles/interaction-particles-links/browser/interaction.js","../node_modules/@tsparticles/interaction-particles-links/browser/plugin.js","../node_modules/@tsparticles/shape-polygon/browser/Utils.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawerBase.js","../node_modules/@tsparticles/shape-polygon/browser/PolygonDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/TriangleDrawer.js","../node_modules/@tsparticles/shape-polygon/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/RotateAnimation.js","../node_modules/@tsparticles/updater-rotate/browser/Options/Classes/Rotate.js","../node_modules/@tsparticles/updater-rotate/browser/RotateUpdater.js","../node_modules/@tsparticles/shape-square/browser/Utils.js","../node_modules/@tsparticles/shape-square/browser/SquareDrawer.js","../node_modules/@tsparticles/shape-star/browser/Utils.js","../node_modules/@tsparticles/shape-star/browser/StarDrawer.js","../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js","../node_modules/@tsparticles/slim/browser/index.js","../node_modules/@tsparticles/move-parallax/browser/index.js","../node_modules/@tsparticles/interaction-external-attract/browser/index.js","../node_modules/@tsparticles/interaction-external-bounce/browser/index.js","../node_modules/@tsparticles/interaction-external-bubble/browser/index.js","../node_modules/@tsparticles/interaction-external-connect/browser/index.js","../node_modules/@tsparticles/interaction-external-grab/browser/index.js","../node_modules/@tsparticles/interaction-external-pause/browser/index.js","../node_modules/@tsparticles/interaction-external-push/browser/index.js","../node_modules/@tsparticles/interaction-external-remove/browser/index.js","../node_modules/@tsparticles/interaction-external-repulse/browser/index.js","../node_modules/@tsparticles/interaction-external-slow/browser/index.js","../node_modules/@tsparticles/interaction-particles-attract/browser/index.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/index.js","../node_modules/@tsparticles/plugin-easing-quad/browser/index.js","../node_modules/@tsparticles/shape-emoji/browser/index.js","../node_modules/@tsparticles/shape-line/browser/index.js","../node_modules/@tsparticles/shape-square/browser/index.js","../node_modules/@tsparticles/shape-star/browser/index.js","../node_modules/@tsparticles/updater-life/browser/index.js","../node_modules/@tsparticles/updater-rotate/browser/index.js","../node_modules/@tsparticles/updater-stroke-color/browser/index.js"],"sourcesContent":["export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\nexport const percentDenominator = 100;\nexport const halfRandom = 0.5;\nexport const millisecondsToSeconds = 1000;\n","export var MoveDirection;\n(function (MoveDirection) {\n    MoveDirection[\"bottom\"] = \"bottom\";\n    MoveDirection[\"bottomLeft\"] = \"bottom-left\";\n    MoveDirection[\"bottomRight\"] = \"bottom-right\";\n    MoveDirection[\"left\"] = \"left\";\n    MoveDirection[\"none\"] = \"none\";\n    MoveDirection[\"right\"] = \"right\";\n    MoveDirection[\"top\"] = \"top\";\n    MoveDirection[\"topLeft\"] = \"top-left\";\n    MoveDirection[\"topRight\"] = \"top-right\";\n    MoveDirection[\"outside\"] = \"outside\";\n    MoveDirection[\"inside\"] = \"inside\";\n})(MoveDirection || (MoveDirection = {}));\n","export function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { errorPrefix } from \"./Constants.js\";\nimport { isNumber } from \"../../Utils/TypeUtils.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n    z: 0,\n}, squareExp = 2, inverseFactorNumerator = 1.0;\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : origin.z;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? origin.z;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(origin.x, origin.y, origin.z);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** squareExp + this.y ** squareExp;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length, noLength = 0;\n        if (length != noLength) {\n            this.multTo(inverseFactorNumerator / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), origin.z);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : origin.z;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, origin.z);\n    }\n    static get origin() {\n        return Vector.create(origin.x, origin.y);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nimport { isNumber } from \"./TypeUtils.js\";\nimport { percentDenominator } from \"../Core/Utils/Constants.js\";\nlet _random = Math.random;\nconst _animationLoop = {\n    nextFrame: (cb) => requestAnimationFrame(cb),\n    cancel: (idx) => cancelAnimationFrame(idx),\n}, easingFunctions = new Map(), double = 2, doublePI = Math.PI * double;\nexport function addEasing(name, easing) {\n    if (easingFunctions.get(name)) {\n        return;\n    }\n    easingFunctions.set(name, easing);\n}\nexport function getEasing(name) {\n    return easingFunctions.get(name) ?? ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    const min = 0, max = 1;\n    return clamp(_random(), min, max - Number.EPSILON);\n}\nexport function setAnimationFunctions(nextFrame, cancel) {\n    _animationLoop.nextFrame = (callback) => nextFrame(callback);\n    _animationLoop.cancel = (handle) => cancel(handle);\n}\nexport function animate(fn) {\n    return _animationLoop.nextFrame(fn);\n}\nexport function cancelAnimation(handle) {\n    _animationLoop.cancel(handle);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r), minOffset = 0;\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = minOffset;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y, squareExp = 2;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** squareExp + dy ** squareExp) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function degToRad(degrees) {\n    const PIDeg = 180;\n    return (degrees * Math.PI) / PIDeg;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return degToRad(direction);\n    }\n    const empty = 0, half = 0.5, quarter = 0.25, threeQuarter = half + quarter;\n    switch (direction) {\n        case MoveDirection.top:\n            return -Math.PI * half;\n        case MoveDirection.topRight:\n            return -Math.PI * quarter;\n        case MoveDirection.right:\n            return empty;\n        case MoveDirection.bottomRight:\n            return Math.PI * quarter;\n        case MoveDirection.bottom:\n            return Math.PI * half;\n        case MoveDirection.bottomLeft:\n            return Math.PI * threeQuarter;\n        case MoveDirection.left:\n            return Math.PI;\n        case MoveDirection.topLeft:\n            return -Math.PI * threeQuarter;\n        case MoveDirection.inside:\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case MoveDirection.outside:\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * doublePI;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    const double = 2;\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * double * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position?.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / percentDenominator,\n            y: (data.position.y * data.size.height) / percentDenominator,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * percentDenominator) * data.size.width) / percentDenominator,\n        y: ((data.position?.y ?? getRandom() * percentDenominator) * data.size.height) / percentDenominator,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    const defaultAlpha = 1;\n    if (!input) {\n        return defaultAlpha;\n    }\n    return input.endsWith(\"%\") ? parseFloat(input) / percentDenominator : parseFloat(input);\n}\n","export var AnimationMode;\n(function (AnimationMode) {\n    AnimationMode[\"auto\"] = \"auto\";\n    AnimationMode[\"increase\"] = \"increase\";\n    AnimationMode[\"decrease\"] = \"decrease\";\n    AnimationMode[\"random\"] = \"random\";\n})(AnimationMode || (AnimationMode = {}));\n","export var AnimationStatus;\n(function (AnimationStatus) {\n    AnimationStatus[\"increasing\"] = \"increasing\";\n    AnimationStatus[\"decreasing\"] = \"decreasing\";\n})(AnimationStatus || (AnimationStatus = {}));\n","export var DestroyType;\n(function (DestroyType) {\n    DestroyType[\"none\"] = \"none\";\n    DestroyType[\"max\"] = \"max\";\n    DestroyType[\"min\"] = \"min\";\n})(DestroyType || (DestroyType = {}));\n","export var OutModeDirection;\n(function (OutModeDirection) {\n    OutModeDirection[\"bottom\"] = \"bottom\";\n    OutModeDirection[\"left\"] = \"left\";\n    OutModeDirection[\"right\"] = \"right\";\n    OutModeDirection[\"top\"] = \"top\";\n})(OutModeDirection || (OutModeDirection = {}));\n","export var PixelMode;\n(function (PixelMode) {\n    PixelMode[\"precise\"] = \"precise\";\n    PixelMode[\"percent\"] = \"percent\";\n})(PixelMode || (PixelMode = {}));\n","export var StartValueType;\n(function (StartValueType) {\n    StartValueType[\"max\"] = \"max\";\n    StartValueType[\"min\"] = \"min\";\n    StartValueType[\"random\"] = \"random\";\n})(StartValueType || (StartValueType = {}));\n","import { clamp, collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"./NumberUtils.js\";\nimport { halfRandom, millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { isArray, isObject } from \"./TypeUtils.js\";\nimport { AnimationMode } from \"../Enums/Modes/AnimationMode.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { DestroyType } from \"../Enums/Types/DestroyType.js\";\nimport { OutModeDirection } from \"../Enums/Directions/OutModeDirection.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { StartValueType } from \"../Enums/Types/StartValueType.js\";\nimport { Vector } from \"../Core/Utils/Vectors.js\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data, half = 0.5, minVelocity = 0;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) * half && velocity > minVelocity) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) * half && velocity < minVelocity)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, selector => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some(t => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeIntersectionObserver(callback) {\n    if (isSsr() || typeof IntersectionObserver === \"undefined\") {\n        return;\n    }\n    return new IntersectionObserver(callback);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    const invalidIndex = -1;\n    return value === array || (isArray(array) && array.indexOf(value) > invalidIndex);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    const minRadius = 0;\n    return areBoundsInside(calculateBounds(point, radius ?? minRadius), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === OutModeDirection.bottom) {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.left)) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === OutModeDirection.right)) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === OutModeDirection.top)) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map(v => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, t => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, div => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, selector => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, div => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getRangeValue(p.options.bounce.horizontal.value), getRangeValue(p.options.bounce.vertical.value)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1), minimumDistance = 0;\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < minimumDistance) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), bounceOptions = particle.options.bounce, resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getRangeValue(bounceOptions.horizontal.value),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getRangeValue(bounceOptions.vertical.value),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    const defaultIndex = 0;\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, defaultIndex);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    if (isArray(obj)) {\n        return obj.find((t, index) => callback(t, index));\n    }\n    const defaultIndex = 0;\n    return callback(obj, defaultIndex) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * millisecondsToSeconds,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    }, decayOffset = 1;\n    if (animationOptions.enable) {\n        res.decay = decayOffset - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case AnimationMode.increase:\n                res.status = AnimationStatus.increasing;\n                break;\n            case AnimationMode.decrease:\n                res.status = AnimationStatus.decreasing;\n                break;\n            case AnimationMode.random:\n                res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                break;\n        }\n        const autoStatus = animationOptions.mode === AnimationMode.auto;\n        switch (animationOptions.startValue) {\n            case StartValueType.min:\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = AnimationStatus.increasing;\n                }\n                break;\n            case StartValueType.max:\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = AnimationStatus.decreasing;\n                }\n                break;\n            case StartValueType.random:\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= halfRandom ? AnimationStatus.increasing : AnimationStatus.decreasing;\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === PixelMode.percent;\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / percentDenominator) * canvasSize.width,\n            y: (positionOrSize.y / percentDenominator) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / percentDenominator) * canvasSize.width,\n            height: (positionOrSize.height / percentDenominator) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nfunction checkDestroy(particle, destroyType, value, minValue, maxValue) {\n    switch (destroyType) {\n        case DestroyType.max:\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case DestroyType.min:\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateAnimation(particle, data, changeDirection, destroyType, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minDecay = 1;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    const velocity = (data.velocity ?? minVelocity) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? minDecay;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    switch (data.status) {\n        case AnimationStatus.increasing:\n            if (data.value >= maxValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.decreasing;\n                }\n                else {\n                    data.value -= maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += velocity;\n            }\n            break;\n        case AnimationStatus.decreasing:\n            if (data.value <= minValue) {\n                if (changeDirection) {\n                    data.status = AnimationStatus.increasing;\n                }\n                else {\n                    data.value += maxValue;\n                }\n                if (!data.loops) {\n                    data.loops = minLoops;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= velocity;\n            }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, destroyType, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","export var AlterType;\n(function (AlterType) {\n    AlterType[\"darken\"] = \"darken\";\n    AlterType[\"enlighten\"] = \"enlighten\";\n})(AlterType || (AlterType = {}));\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, mix, randomInRange, setRangeValue, } from \"./NumberUtils.js\";\nimport { isArray, isString } from \"./TypeUtils.js\";\nimport { millisecondsToSeconds, percentDenominator } from \"../Core/Utils/Constants.js\";\nimport { AnimationStatus } from \"../Enums/AnimationStatus.js\";\nimport { itemFromArray } from \"./Utils.js\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 4] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed), radix = 16, defaultAlpha = 1, alphaFactor = 0xff;\n    return result\n        ? {\n            a: result[RgbIndexes.a] !== undefined\n                ? parseInt(result[RgbIndexes.a], radix) / alphaFactor\n                : defaultAlpha,\n            b: parseInt(result[RgbIndexes.b], radix),\n            g: parseInt(result[RgbIndexes.g], radix),\n            r: parseInt(result[RgbIndexes.r], radix),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const rgbMax = 255, hMax = 360, sMax = 100, lMax = 100, hMin = 0, sMin = 0, hPhase = 60, half = 0.5, double = 2, r1 = color.r / rgbMax, g1 = color.g / rgbMax, b1 = color.b / rgbMax, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: hMin,\n        l: (max + min) * half,\n        s: sMin,\n    };\n    if (max !== min) {\n        res.s = res.l < half ? (max - min) / (max + min) : (max - min) / (double - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? double + (b1 - r1) / (max - min) : double * double + (r1 - g1) / (max - min));\n    }\n    res.l *= lMax;\n    res.s *= sMax;\n    res.h *= hPhase;\n    if (res.h < hMin) {\n        res.h += hMax;\n    }\n    if (res.h >= hMax) {\n        res.h -= hMax;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const hMax = 360, sMax = 100, lMax = 100, sMin = 0, lMin = 0, h = ((hsl.h % hMax) + hMax) % hMax, s = Math.max(sMin, Math.min(sMax, hsl.s)), l = Math.max(lMin, Math.min(lMax, hsl.l)), hNormalized = h / hMax, sNormalized = s / sMax, lNormalized = l / lMax, rgbFactor = 255, triple = 3;\n    if (s === sMin) {\n        const grayscaleValue = Math.round(lNormalized * rgbFactor);\n        return { r: grayscaleValue, g: grayscaleValue, b: grayscaleValue };\n    }\n    const half = 0.5, double = 2, channel = (temp1, temp2, temp3) => {\n        const temp3Min = 0, temp3Max = 1, sextuple = 6;\n        if (temp3 < temp3Min) {\n            temp3++;\n        }\n        if (temp3 > temp3Max) {\n            temp3--;\n        }\n        if (temp3 * sextuple < temp3Max) {\n            return temp1 + (temp2 - temp1) * sextuple * temp3;\n        }\n        if (temp3 * double < temp3Max) {\n            return temp2;\n        }\n        if (temp3 * triple < temp3Max * double) {\n            const temp3Offset = double / triple;\n            return temp1 + (temp2 - temp1) * (temp3Offset - temp3) * sextuple;\n        }\n        return temp1;\n    }, sNormalizedOffset = 1, temp1 = lNormalized < half\n        ? lNormalized * (sNormalizedOffset + sNormalized)\n        : lNormalized + sNormalized - lNormalized * sNormalized, temp2 = double * lNormalized - temp1, phaseNumerator = 1, phaseThird = phaseNumerator / triple, red = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized + phaseThird)), green = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized)), blue = Math.min(rgbFactor, rgbFactor * channel(temp2, temp1, hNormalized - phaseThird));\n    return { r: Math.round(red), g: Math.round(green), b: Math.round(blue) };\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const defaultMin = 0, fixedMin = min ?? defaultMin, rgbMax = 256;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, rgbMax))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    const defaultOpacity = 1;\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? defaultOpacity})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    const defaultOpacity = 1;\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? defaultOpacity})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    const defaultVelocity = 0, decayOffset = 1, defaultLoops = 0, defaultTime = 0;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / percentDenominator) * reduceFactor;\n        colorValue.decay = decayOffset - getRangeValue(colorAnimation.decay);\n        colorValue.status = AnimationStatus.increasing;\n        colorValue.loops = defaultLoops;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = defaultTime;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * millisecondsToSeconds;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n        colorValue.offset = setRangeValue(colorAnimation.offset);\n    }\n    else {\n        colorValue.velocity = defaultVelocity;\n    }\n}\nexport function updateColorValue(data, range, decrease, delta) {\n    const minLoops = 0, minDelay = 0, identity = 1, minVelocity = 0, minOffset = 0, velocityFactor = 3.6;\n    if (!data ||\n        !data.enable ||\n        ((data.maxLoops ?? minLoops) > minLoops && (data.loops ?? minLoops) > (data.maxLoops ?? minLoops))) {\n        return;\n    }\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? minDelay) > minDelay && data.time < (data.delayTime ?? minDelay)) {\n        return;\n    }\n    const offset = data.offset ? randomInRange(data.offset) : minOffset, velocity = (data.velocity ?? minVelocity) * delta.factor + offset * velocityFactor, decay = data.decay ?? identity, max = getRangeMax(range), min = getRangeMin(range);\n    if (!decrease || data.status === AnimationStatus.increasing) {\n        data.value += velocity;\n        if (data.value > max) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            if (decrease) {\n                data.status = AnimationStatus.decreasing;\n            }\n            else {\n                data.value -= max;\n            }\n        }\n    }\n    else {\n        data.value -= velocity;\n        const minValue = 0;\n        if (data.value < minValue) {\n            if (!data.loops) {\n                data.loops = 0;\n            }\n            data.loops++;\n            data.status = AnimationStatus.increasing;\n        }\n    }\n    if (data.velocity && decay !== identity) {\n        data.velocity *= decay;\n    }\n    data.value = clamp(data.value, min, max);\n}\nexport function updateColor(color, delta) {\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    const ranges = {\n        h: { min: 0, max: 360 },\n        s: { min: 0, max: 100 },\n        l: { min: 0, max: 100 },\n    };\n    if (h) {\n        updateColorValue(h, ranges.h, false, delta);\n    }\n    if (s) {\n        updateColorValue(s, ranges.s, true, delta);\n    }\n    if (l) {\n        updateColorValue(l, ranges.l, true, delta);\n    }\n}\n","import { AlterType } from \"../Enums/Types/AlterType.js\";\nimport { getStyleFromRgb } from \"./ColorUtils.js\";\nconst origin = { x: 0, y: 0 }, defaultTransform = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n};\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, origin.x, origin.y, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(origin.x, origin.y, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data, pos = particle.getPosition(), defaultAngle = 0, angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : defaultAngle), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, rotating = !!angle, identity = 1, transformData = {\n        a: rotateData.cos * (transform.a ?? defaultTransform.a),\n        b: rotating ? rotateData.sin * (transform.b ?? identity) : transform.b ?? defaultTransform.b,\n        c: rotating ? -rotateData.sin * (transform.c ?? identity) : transform.c ?? defaultTransform.c,\n        d: rotateData.cos * (transform.d ?? defaultTransform.d),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const minStrokeWidth = 0, strokeWidth = particle.strokeWidth ?? minStrokeWidth;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = {\n        container,\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        transformData,\n        strokeWidth,\n    };\n    drawShape(drawData);\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.resetTransform();\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, strokeWidth, transformData } = data, minStrokeWidth = 0;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    context.beginPath();\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > minStrokeWidth) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer?.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    const lFactor = 1;\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === AlterType.darken ? -lFactor : lFactor) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils.js\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils.js\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { generatedAttribute } from \"./Utils/Constants.js\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key], defaultValue = 1;\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? defaultValue) * newValue;\n    }\n}\nfunction setStyle(canvas, style, important = false) {\n    if (!style) {\n        return;\n    }\n    const element = canvas;\n    if (!element) {\n        return;\n    }\n    const elementStyle = element.style;\n    if (!elementStyle) {\n        return;\n    }\n    for (const key in style) {\n        const value = style[key];\n        if (!value) {\n            continue;\n        }\n        elementStyle.setProperty(key, value, important ? \"important\" : \"\");\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = particle => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw?.(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw?.(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize?.();\n            }\n        };\n        this._getPluginParticleColors = particle => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = async () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color;\n            if (color) {\n                const coverRgb = rangeColorToRgb(color);\n                if (coverRgb) {\n                    const coverColor = {\n                        ...coverRgb,\n                        a: cover.opacity,\n                    };\n                    this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n                }\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!cover.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._coverImage = {\n                            image: img,\n                            opacity: cover.opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = cover.image;\n                });\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            const factorNumerator = 1, opacity = factorNumerator / trail.length;\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", evt => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = baseColor => {\n            this.draw(ctx => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw(ctx => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver(observer => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver(observer => {\n                if (!element || !(element instanceof Node)) {\n                    return;\n                }\n                observer.observe(element, { attributes: true });\n            });\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            setStyle(element, originalStyle);\n        };\n        this._safeMutationObserver = callback => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const radix = 10;\n            setStyle(element, {\n                position: \"fixed\",\n                zIndex: this.container.actualOptions.fullScreen.zIndex.toString(radix),\n                top: \"0\",\n                left: \"0\",\n                width: \"100%\",\n                height: \"100%\",\n            }, true);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill, minimumLength = 0;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > minimumLength && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else if (options.clear) {\n            this.draw(ctx => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element?.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawAsync(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return undefined;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius(), minimumSize = 0;\n        if (radius <= minimumSize) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zIndexFactorOffset = 1, zIndexFactor = zIndexFactorOffset - particle.zIndexFactor, zOpacityFactor = zIndexFactor ** zIndexOptions.opacityRate, defaultOpacity = 1, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? defaultOpacity, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * zIndexFactor ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw(ctx => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw(ctx => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = safeMutationObserver(records => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        await this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor ?? plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles ?? updater.getTransformValues ?? updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver(obs => {\n            if (!this.element || !(this.element instanceof Node)) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw(ctx => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                if (this._coverImage) {\n                    this._paintImage(this._coverImage.image, this._coverImage.opacity);\n                }\n                else if (this._coverColorStyle) {\n                    this._paintBase(this._coverColorStyle);\n                }\n                else {\n                    this._paintBase();\n                }\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            container.particles.setResizeFactor({\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            });\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver(obs => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw(ctx => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","export var InteractivityDetect;\n(function (InteractivityDetect) {\n    InteractivityDetect[\"canvas\"] = \"canvas\";\n    InteractivityDetect[\"parent\"] = \"parent\";\n    InteractivityDetect[\"window\"] = \"window\";\n})(InteractivityDetect || (InteractivityDetect = {}));\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { millisecondsToSeconds, mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants.js\";\nimport { InteractivityDetect } from \"../../Enums/InteractivityDetect.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nconst double = 2;\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, mode => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                const touchDelay = 500;\n                setTimeout(() => this._mouseTouchFinish(), touchDelay);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find(theme => theme.name === themeName);\n            if (theme?.default.auto) {\n                void container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document?.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.animationStatus) {\n                    void container.play(true);\n                }\n                else {\n                    void container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            const handleResize = async () => {\n                const canvas = this.container.canvas;\n                await canvas?.windowResize();\n            };\n            this._resizeTimeout = setTimeout(() => void handleResize(), this.container.actualOptions.interactivity.events.resize.delay * millisecondsToSeconds);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === InteractivityDetect.window) {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === InteractivityDetect.parent && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = add => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = add => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver((entries) => {\n                    const entry = entries.find(e => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = e => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = e => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity?.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === InteractivityDetect.parent) {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + double * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + double * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lengthOffset = 1, lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset], canvasRect = canvasEl.getBoundingClientRect(), defaultCoordinate = 0;\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? defaultCoordinate),\n                        y: lastTouch.clientY - (canvasRect.top ?? defaultCoordinate),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = e => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","export var EventType;\n(function (EventType) {\n    EventType[\"configAdded\"] = \"configAdded\";\n    EventType[\"containerInit\"] = \"containerInit\";\n    EventType[\"particlesSetup\"] = \"particlesSetup\";\n    EventType[\"containerStarted\"] = \"containerStarted\";\n    EventType[\"containerStopped\"] = \"containerStopped\";\n    EventType[\"containerDestroyed\"] = \"containerDestroyed\";\n    EventType[\"containerPaused\"] = \"containerPaused\";\n    EventType[\"containerPlay\"] = \"containerPlay\";\n    EventType[\"containerBuilt\"] = \"containerBuilt\";\n    EventType[\"particleAdded\"] = \"particleAdded\";\n    EventType[\"particleDestroyed\"] = \"particleDestroyed\";\n    EventType[\"particleRemoved\"] = \"particleRemoved\";\n})(EventType || (EventType = {}));\n","export var DivType;\n(function (DivType) {\n    DivType[\"circle\"] = \"circle\";\n    DivType[\"rectangle\"] = \"rectangle\";\n})(DivType || (DivType = {}));\n","import { isArray, isString } from \"../../Utils/TypeUtils.js\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover.js\";\nimport { isString } from \"../../../Utils/TypeUtils.js\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover, color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined || cover.image !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { DivType } from \"../../../../Enums/Types/DivType.js\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = DivType.circle;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax.js\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { ClickEvent } from \"./ClickEvent.js\";\nimport { DivEvent } from \"./DivEvent.js\";\nimport { HoverEvent } from \"./HoverEvent.js\";\nimport { ResizeEvent } from \"./ResizeEvent.js\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils.js\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick);\n        const onDiv = data.onDiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, t => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover);\n        this.resize.load(data.resize);\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events.js\";\nimport { InteractivityDetect } from \"../../../Enums/InteractivityDetect.js\";\nimport { Modes } from \"./Modes/Modes.js\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = InteractivityDetect.window;\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { PixelMode } from \"../../Enums/Modes/PixelMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nconst defaultPosition = 50;\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? defaultPosition,\n                y: data.position.y ?? defaultPosition,\n                mode: data.position.mode ?? PixelMode.percent,\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export var ResponsiveMode;\n(function (ResponsiveMode) {\n    ResponsiveMode[\"screen\"] = \"screen\";\n    ResponsiveMode[\"canvas\"] = \"canvas\";\n})(ResponsiveMode || (ResponsiveMode = {}));\n","export var ThemeMode;\n(function (ThemeMode) {\n    ThemeMode[\"any\"] = \"any\";\n    ThemeMode[\"dark\"] = \"dark\";\n    ThemeMode[\"light\"] = \"light\";\n})(ThemeMode || (ThemeMode = {}));\n","export var CollisionMode;\n(function (CollisionMode) {\n    CollisionMode[\"absorb\"] = \"absorb\";\n    CollisionMode[\"bounce\"] = \"bounce\";\n    CollisionMode[\"destroy\"] = \"destroy\";\n})(CollisionMode || (CollisionMode = {}));\n","export var OutMode;\n(function (OutMode) {\n    OutMode[\"bounce\"] = \"bounce\";\n    OutMode[\"none\"] = \"none\";\n    OutMode[\"out\"] = \"out\";\n    OutMode[\"destroy\"] = \"destroy\";\n    OutMode[\"split\"] = \"split\";\n})(OutMode || (OutMode = {}));\n","export var LimitMode;\n(function (LimitMode) {\n    LimitMode[\"delete\"] = \"delete\";\n    LimitMode[\"wait\"] = \"wait\";\n})(LimitMode || (LimitMode = {}));\n","export var InteractorType;\n(function (InteractorType) {\n    InteractorType[\"external\"] = \"external\";\n    InteractorType[\"particles\"] = \"particles\";\n})(InteractorType || (InteractorType = {}));\n","export var ParticleOutType;\n(function (ParticleOutType) {\n    ParticleOutType[\"normal\"] = \"normal\";\n    ParticleOutType[\"inside\"] = \"inside\";\n    ParticleOutType[\"outside\"] = \"outside\";\n})(ParticleOutType || (ParticleOutType = {}));\n","import { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { deepExtend } from \"../../Utils/Utils.js\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = ResponsiveMode.canvas;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === ResponsiveMode.screen) {\n                this.mode = ResponsiveMode.screen;\n            }\n            else {\n                this.mode = ResponsiveMode.canvas;\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { ThemeMode } from \"../../../Enums/Modes/ThemeMode.js\";\nexport class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = ThemeMode.any;\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault.js\";\nimport { deepExtend } from \"../../../Utils/Utils.js\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { AnimationMode } from \"../../Enums/Modes/AnimationMode.js\";\nimport { StartValueType } from \"../../Enums/Types/StartValueType.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = AnimationMode.auto;\n        this.startValue = StartValueType.random;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { AnimationOptions } from \"./AnimationOptions.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ColorAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.offset = 0;\n        this.sync = true;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation.js\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/TypeUtils.js\";\nimport { HslAnimation } from \"./HslAnimation.js\";\nimport { OptionsColor } from \"./OptionsColor.js\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class ValueWithRandom {\n    constructor() {\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor.js\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionMode } from \"../../../../Enums/Modes/CollisionMode.js\";\nimport { CollisionsAbsorb } from \"./CollisionsAbsorb.js\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap.js\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = CollisionMode.bounce;\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nexport class Effect {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const effect in options) {\n                const item = options[effect];\n                if (item) {\n                    this.options[effect] = deepExtend(this.options[effect] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.rotate) {\n            const rotateX = data.rotate.x;\n            if (rotateX !== undefined) {\n                this.rotate.x = rotateX;\n            }\n            const rotateY = data.rotate.y;\n            if (rotateY !== undefined) {\n                this.rotate.y = rotateY;\n            }\n        }\n    }\n}\n","import { PixelMode } from \"../../../../Enums/Modes/PixelMode.js\";\nexport class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = PixelMode.percent;\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom.js\";\nimport { deepExtend } from \"../../../../../Utils/Utils.js\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor.js\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill.js\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined) {\n            this.fill.load(data.fill);\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","import { OutMode } from \"../../../../Enums/Modes/OutMode.js\";\nexport class OutModes {\n    constructor() {\n        this.default = OutMode.out;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { MoveDirection } from \"../../../../Enums/Directions/MoveDirection.js\";\nimport { isNumber, isObject } from \"../../../../Utils/TypeUtils.js\";\nimport { MoveAngle } from \"./MoveAngle.js\";\nimport { MoveAttract } from \"./MoveAttract.js\";\nimport { MoveCenter } from \"./MoveCenter.js\";\nimport { MoveGravity } from \"./MoveGravity.js\";\nimport { MovePath } from \"./Path/MovePath.js\";\nimport { MoveTrail } from \"./MoveTrail.js\";\nimport { OutModes } from \"./OutModes.js\";\nimport { Spin } from \"./Spin.js\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils.js\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = MoveDirection.none;\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 2;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation.js\";\nimport { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class Opacity extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.value = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { LimitMode } from \"../../../../Enums/Modes/LimitMode.js\";\nexport class ParticlesNumberLimit {\n    constructor() {\n        this.mode = LimitMode.delete;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity.js\";\nimport { ParticlesNumberLimit } from \"./ParticlesNumberLimit.js\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = new ParticlesNumberLimit();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        this.limit.load(data.limit);\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor.js\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils.js\";\nexport class Shape {\n    constructor() {\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { DestroyType } from \"../../../../Enums/Types/DestroyType.js\";\nimport { RangedAnimationOptions } from \"../../AnimationOptions.js\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = DestroyType.none;\n        this.speed = 5;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { RangedAnimationValueWithRandom } from \"../../ValueWithRandom.js\";\nimport { SizeAnimation } from \"./SizeAnimation.js\";\nexport class Size extends RangedAnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.value = 3;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor.js\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils.js\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom.js\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils.js\";\nimport { AnimatableColor } from \"../AnimatableColor.js\";\nimport { Collisions } from \"./Collisions/Collisions.js\";\nimport { Effect } from \"./Effect/Effect.js\";\nimport { Move } from \"./Move/Move.js\";\nimport { Opacity } from \"./Opacity/Opacity.js\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce.js\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber.js\";\nimport { Shadow } from \"./Shadow.js\";\nimport { Shape } from \"./Shape/Shape.js\";\nimport { Size } from \"./Size/Size.js\";\nimport { Stroke } from \"./Stroke.js\";\nimport { ZIndex } from \"./ZIndex/ZIndex.js\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.effect = new Effect();\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.groups !== undefined) {\n            for (const group of Object.keys(data.groups)) {\n                if (!Object.hasOwn(data.groups, group)) {\n                    continue;\n                }\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        this.effect.load(data.effect);\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, t => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions.js\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils.js\";\nimport { Background } from \"./Background/Background.js\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask.js\";\nimport { FullScreen } from \"./FullScreen/FullScreen.js\";\nimport { Interactivity } from \"./Interactivity/Interactivity.js\";\nimport { ManualParticle } from \"./ManualParticle.js\";\nimport { Responsive } from \"./Responsive.js\";\nimport { ResponsiveMode } from \"../../Enums/Modes/ResponsiveMode.js\";\nimport { Theme } from \"./Theme/Theme.js\";\nimport { ThemeMode } from \"../../Enums/Modes/ThemeMode.js\";\nimport { isBoolean } from \"../../Utils/TypeUtils.js\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils.js\";\nimport { setRangeValue } from \"../../Utils/NumberUtils.js\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = mode => {\n            return (this.themes.find(theme => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find(theme => theme.default.value && theme.default.mode === ThemeMode.any));\n        };\n        this._importPreset = preset => {\n            this.load(this._engine.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.clear = true;\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, preset => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.clear !== undefined) {\n            this.clear = data.clear;\n        }\n        if (data.key !== undefined) {\n            this.key = data.key;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map(t => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find(t => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(ThemeMode.dark)?.name;\n        this.defaultThemes.light = this._findDefaultTheme(ThemeMode.light)?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find(t => t.mode === ResponsiveMode.screen && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find(theme => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch?.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? ThemeMode.dark : ThemeMode.light);\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = [];\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        this._interactors = await this._engine.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case InteractorType.external:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case InteractorType.particles:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.interact(particle, delta);\n            }\n        }\n    }\n    reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { Vector, Vector3d } from \"./Utils/Vectors.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, degToRad, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils.js\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity.js\";\nimport { MoveDirection } from \"../Enums/Directions/MoveDirection.js\";\nimport { OutMode } from \"../Enums/Modes/OutMode.js\";\nimport { ParticleOutType } from \"../Enums/Types/ParticleOutType.js\";\nimport { PixelMode } from \"../Enums/Modes/PixelMode.js\";\nimport { alterHsl } from \"../Utils/CanvasUtils.js\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils.js\";\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2, randomString = \"random\";\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return deepExtend({\n        close: effectOptions.close,\n        fill: effectOptions.fill,\n    }, itemFromSingleOrMultiple(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return deepExtend({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill,\n    }, itemFromSingleOrMultiple(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nexport class Particle {\n    constructor(engine, container) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = defaultRetryCount) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [OutMode.bounce],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === MoveDirection.inside || moveOptions.direction === MoveDirection.outside) {\n                return res;\n            }\n            const rad = degToRad(getRangeValue(moveOptions.angle.value)), radOffset = degToRad(getRangeValue(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = defaultRetryCount) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find(particle => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = color => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor(((this.roll.angle ?? none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = position => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? defaultRadius,\n                mode: this.options.move.center.mode ?? PixelMode.percent,\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case MoveDirection.inside:\n                    this.outType = ParticleOutType.inside;\n                    break;\n                case MoveDirection.outside:\n                    this.outType = ParticleOutType.outside;\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._engine = engine;\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer?.particleDestroy?.(this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleDestroyed?.(this, override);\n        }\n        for (const updater of container.particles.updaters) {\n            updater.particleDestroyed?.(this, override);\n        }\n        pathGenerator?.reset(this);\n        this._engine.dispatchEvent(EventType.particleDestroyed, {\n            container: this.container,\n            data: {\n                particle: this,\n            },\n        });\n    }\n    draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins) {\n            canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.isRotating = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = ParticleOutType.normal;\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), { reduceDuplicates } = particlesOptions, effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type;\n        this.effect = itemFromSingleOrMultiple(effectType, this.id, reduceDuplicates);\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            if (overrideOptions.effect?.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = itemFromSingleOrMultiple(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if (overrideOptions.shape?.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        if (this.effect === randomString) {\n            const availableEffects = [...this.container.effectDrawers.keys()];\n            this.effect = availableEffects[Math.floor(Math.random() * availableEffects.length)];\n        }\n        if (this.shape === randomString) {\n            const availableShapes = [...this.container.shapeDrawers.keys()];\n            this.shape = availableShapes[Math.floor(Math.random() * availableShapes.length)];\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.effectFill = effectData?.fill ?? particlesOptions.effect.fill;\n        this.effectClose = effectData?.close ?? particlesOptions.effect.close;\n        this.shapeFill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.shapeClose = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getRangeValue(pathOptions.delay.value) * millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer?.loadEffect) {\n            effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer?.loadShape) {\n            shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of particles.movers) {\n            mover.init?.(this);\n        }\n        effectDrawer?.particleInit?.(container, this);\n        shapeDrawer?.particleInit?.(container, this);\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated?.(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset?.(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export var RangeType;\n(function (RangeType) {\n    RangeType[\"circle\"] = \"circle\";\n    RangeType[\"rectangle\"] = \"rectangle\";\n})(RangeType || (RangeType = {}));\n","import { RangeType } from \"../../Types/RangeType.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst squareExp = 2;\nexport class BaseRange {\n    constructor(x, y, type) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n        this.type = type;\n    }\n}\nexport class Circle extends BaseRange {\n    constructor(x, y, radius) {\n        super(x, y, RangeType.circle);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle || range.type === RangeType.circle) {\n            const circleRange = range, rSum = r + circleRange.radius, dist = Math.sqrt(distPos.x ** squareExp + distPos.y ** squareExp);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle || range.type === RangeType.rectangle) {\n            const rectRange = range, { width, height } = rectRange.size, edges = Math.pow(distPos.x - width, squareExp) + Math.pow(distPos.y - height, squareExp);\n            return (edges <= r ** squareExp ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\nexport class Rectangle extends BaseRange {\n    constructor(x, y, width, height) {\n        super(x, y, RangeType.rectangle);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            return range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle, Rectangle } from \"./Ranges.js\";\nimport { getDistance } from \"../../Utils/NumberUtils.js\";\nconst half = 0.5, double = 2, subdivideCount = 4;\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < subdivideCount; i++) {\n                const fixedIndex = i % double;\n                this._subs.push(new QuadTree(new Rectangle(x + width * half * fixedIndex, y + height * half * (Math.round(i * half) - fixedIndex), width * half, height * half), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some(sub => sub.insert(point));\n    }\n    query(range, check) {\n        const res = [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                res.push(...sub.query(range, check));\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { InteractionManager } from \"./Utils/InteractionManager.js\";\nimport { LimitMode } from \"../Enums/Modes/LimitMode.js\";\nimport { Particle } from \"./Particle.js\";\nimport { Point } from \"./Utils/Point.js\";\nimport { QuadTree } from \"./Utils/QuadTree.js\";\nimport { Rectangle } from \"./Utils/Ranges.js\";\nimport { errorPrefix } from \"./Utils/Constants.js\";\nconst qTreeCapacity = 4, squareExp = 2, defaultRemoveQuantity = 1;\nconst qTreeRectangle = (canvasSize) => {\n    const { height, width } = canvasSize, posOffset = -0.25, sizeFactor = 1.5;\n    return new Rectangle(posOffset * width, posOffset * height, sizeFactor * width, sizeFactor * height);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._addToPool = (...particles) => {\n            this._pool.push(...particles);\n        };\n        this._applyDensity = (options, manualCount, group) => {\n            const numberOptions = options.number;\n            if (!options.number.density?.enable) {\n                if (group === undefined) {\n                    this._limit = numberOptions.limit.value;\n                }\n                else if (numberOptions.limit) {\n                    this._groupLimits.set(group, numberOptions.limit.value);\n                }\n                return;\n            }\n            const densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, minLimit = 0, optParticlesLimit = numberOptions.limit.value > minLimit ? numberOptions.limit.value : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter(t => t.group === group).length);\n            if (group === undefined) {\n                this._limit = numberOptions.limit.value * densityFactor;\n            }\n            else {\n                this._groupLimits.set(group, numberOptions.limit.value * densityFactor);\n            }\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = densityOptions => {\n            const container = this._container, defaultFactor = 1;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return defaultFactor;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.height * densityOptions.width * pxRatio ** squareExp);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this._pool.pop();\n                if (!particle) {\n                    particle = new Particle(this._engine, this._container);\n                }\n                particle.init(this._nextId, position, overrideOptions, group);\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(EventType.particleAdded, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            const zIdx = this._zArray.indexOf(particle), deleteCount = 1;\n            this._array.splice(index, deleteCount);\n            this._zArray.splice(zIdx, deleteCount);\n            particle.destroy(override);\n            this._engine.dispatchEvent(EventType.particleRemoved, {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            this._addToPool(particle);\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this._pool = [];\n        this._limit = 0;\n        this._groupLimits = new Map();\n        this._needsSort = false;\n        this._lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        this._pluginsInitialized = false;\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = [];\n        this.updaters = [];\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        options.manualParticles.forEach(p => this.addParticle(p.position ? getPosition(p.position, container.canvas.size) : undefined, p.options));\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const limitMode = this._container.actualOptions.particles.number.limit.mode, limit = group === undefined ? this._limit : this._groupLimits.get(group) ?? this._limit, currentCount = this.count, minLimit = 0;\n        if (limit > minLimit) {\n            switch (limitMode) {\n                case LimitMode.delete: {\n                    const countOffset = 1, minCount = 0, countToRemove = currentCount + countOffset - limit;\n                    if (countToRemove > minCount) {\n                        this.removeQuantity(countToRemove);\n                    }\n                    break;\n                }\n                case LimitMode.wait:\n                    if (currentCount >= limit) {\n                        return;\n                    }\n                    break;\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n        this._pluginsInitialized = false;\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    draw(delta) {\n        const container = this._container, canvas = container.canvas;\n        canvas.clear();\n        this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    get(index) {\n        return this._array[index];\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions;\n        this._lastZIndex = 0;\n        this._needsSort = false;\n        await this.initPlugins();\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            handled = plugin.particlesInitialization?.() ?? handled;\n            if (handled) {\n                break;\n            }\n        }\n        this.addManualParticles();\n        if (!handled) {\n            const particlesOptions = options.particles, groups = particlesOptions.groups;\n            for (const group in groups) {\n                const groupOptions = groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < particlesOptions.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < particlesOptions.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    async initPlugins() {\n        if (this._pluginsInitialized) {\n            return;\n        }\n        const container = this._container;\n        this.movers = await this._engine.getMovers(container, true);\n        this.updaters = await this._engine.getUpdaters(container, true);\n        await this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n    }\n    async redraw() {\n        this.clear();\n        await this.init();\n        this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = defaultRemoveQuantity, group, override) {\n        const minIndex = 0;\n        if (index < minIndex || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            if (this._removeParticle(i--, group, override)) {\n                deleted++;\n            }\n        }\n    }\n    removeQuantity(quantity, group) {\n        const defaultIndex = 0;\n        this.removeAt(defaultIndex, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups, manualCount = 0;\n        for (const group in groups) {\n            this._applyDensity(groups[group], manualCount, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    setLastZIndex(zIndex) {\n        this._lastZIndex = zIndex;\n        this._needsSort = this._needsSort || this._lastZIndex < zIndex;\n    }\n    setResizeFactor(factor) {\n        this._resizeFactor = factor;\n    }\n    update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update?.(delta);\n        }\n        const resizeFactor = this._resizeFactor;\n        for (const particle of this._array) {\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                plugin.particleUpdate?.(particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            for (const particle of particlesToDelete) {\n                this._engine.dispatchEvent(EventType.particleRemoved, {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n            }\n            this._addToPool(...particlesToDelete);\n        }\n        this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete this._resizeFactor;\n        if (this._needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            const lengthOffset = 1;\n            this._lastZIndex = zArray[zArray.length - lengthOffset].position.z;\n            this._needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { isSsr } from \"../Utils/Utils.js\";\nconst defaultRatio = 1, defaultReduceFactor = 1;\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = defaultRatio;\n        this.reduceFactor = defaultReduceFactor;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? defaultRatio : window.devicePixelRatio;\n        this.reduceFactor = defaultReduceFactor;\n        const ratio = this.pixelRatio, canvas = container.canvas;\n        if (canvas.element) {\n            const element = canvas.element;\n            canvas.size.width = element.offsetWidth * ratio;\n            canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation, getRangeValue } from \"../Utils/NumberUtils.js\";\nimport { errorPrefix, millisecondsToSeconds } from \"./Utils/Constants.js\";\nimport { getLogger, safeIntersectionObserver } from \"../Utils/Utils.js\";\nimport { Canvas } from \"./Canvas.js\";\nimport { EventListeners } from \"./Utils/EventListeners.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { Options } from \"../Options/Classes/Options.js\";\nimport { Particles } from \"./Particles.js\";\nimport { Retina } from \"./Retina.js\";\nimport { loadOptions } from \"../Utils/OptionsUtils.js\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nconst defaultFps = 60;\nfunction initDelta(value, fpsLimit = defaultFps, smooth = false) {\n    return {\n        value,\n        factor: smooth ? defaultFps / fpsLimit : (defaultFps * value) / millisecondsToSeconds,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this._intersectionManager = entries => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                if (entry.isIntersecting) {\n                    void this.play();\n                }\n                else {\n                    this.pause();\n                }\n            }\n        };\n        this._nextFrame = (timestamp) => {\n            try {\n                if (!this._smooth &&\n                    this._lastFrameTime !== undefined &&\n                    timestamp < this._lastFrameTime + millisecondsToSeconds / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this._lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this._lastFrameTime, this.fpsLimit, this._smooth);\n                this.addLifeTime(delta.value);\n                this._lastFrameTime = timestamp;\n                if (delta.value > millisecondsToSeconds) {\n                    this.draw(false);\n                    return;\n                }\n                this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.animationStatus) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.id = Symbol(id);\n        this.fpsLimit = 120;\n        this._smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this._lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._clickHandlers = new Map();\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        this._intersectionObserver = safeIntersectionObserver(entries => this._intersectionManager(entries));\n        this._engine.dispatchEvent(EventType.containerBuilt, { container: this });\n    }\n    get animationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        }, clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            }, radius = 1;\n            clickOrTouchHandler(e, pos, radius);\n        }, touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        }, touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        }, touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e, lengthOffset = 1;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - lengthOffset];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - lengthOffset];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, minCoordinate = 0, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : minCoordinate),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : minCoordinate),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        }, touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        this._clickHandlers.set(\"click\", clickHandler);\n        this._clickHandlers.set(\"touchstart\", touchStartHandler);\n        this._clickHandlers.set(\"touchmove\", touchMoveHandler);\n        this._clickHandlers.set(\"touchend\", touchEndHandler);\n        this._clickHandlers.set(\"touchcancel\", touchCancelHandler);\n        for (const [key, handler] of this._clickHandlers) {\n            el.addEventListener(key, handler);\n        }\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    clearClickHandlers() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        for (const [key, handler] of this._clickHandlers) {\n            this.interactivity.element?.removeEventListener(key, handler);\n        }\n        this._clickHandlers.clear();\n    }\n    destroy(remove = true) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.clearClickHandlers();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, effectDrawer] of this.effectDrawers) {\n            effectDrawer.destroy?.(this);\n        }\n        for (const [, shapeDrawer] of this.shapeDrawers) {\n            shapeDrawer.destroy?.(this);\n        }\n        for (const key of this.effectDrawers.keys()) {\n            this.effectDrawers.delete(key);\n        }\n        for (const key of this.shapeDrawers.keys()) {\n            this.shapeDrawers.delete(key);\n        }\n        this._engine.clearPlugins(this);\n        this.destroyed = true;\n        if (remove) {\n            const mainArr = this._engine.items, idx = mainArr.findIndex(t => t === this), minIndex = 0;\n            if (idx >= minIndex) {\n                const deleteCount = 1;\n                mainArr.splice(idx, deleteCount);\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerDestroyed, { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        const frame = (timestamp) => {\n            if (refreshTime) {\n                this._lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            this._nextFrame(timestamp);\n        };\n        this._drawAnimationFrame = animate(timestamp => frame(timestamp));\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode?.(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const effects = this._engine.getSupportedEffects();\n        for (const type of effects) {\n            const drawer = this._engine.getEffectDrawer(type);\n            if (drawer) {\n                this.effectDrawers.set(type, drawer);\n            }\n        }\n        const shapes = this._engine.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.getShapeDrawer(type);\n            if (drawer) {\n                this.shapeDrawers.set(type, drawer);\n            }\n        }\n        await this.particles.initPlugins();\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = await this._engine.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        const { zLayers, duration, delay, fpsLimit, smooth } = this.actualOptions;\n        this.zLayers = zLayers;\n        this._duration = getRangeValue(duration) * millisecondsToSeconds;\n        this._delay = getRangeValue(delay) * millisecondsToSeconds;\n        this._lifeTime = 0;\n        const defaultFpsLimit = 120, minFpsLimit = 0;\n        this.fpsLimit = fpsLimit > minFpsLimit ? fpsLimit : defaultFpsLimit;\n        this._smooth = smooth;\n        for (const [, drawer] of this.effectDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, drawer] of this.shapeDrawers) {\n            await drawer.init?.(this);\n        }\n        for (const [, plugin] of this.plugins) {\n            await plugin.init?.();\n        }\n        this._engine.dispatchEvent(EventType.containerInit, { container: this });\n        await this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup?.();\n        }\n        this._engine.dispatchEvent(EventType.particlesSetup, { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause?.();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(EventType.containerPaused, { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(EventType.containerPlay, { container: this });\n        this.draw(needsUpdate ?? false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset(sourceOptions) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = sourceOptions;\n        this._sourceOptions = sourceOptions;\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise(resolve => {\n            const start = async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    await plugin.start?.();\n                }\n                this._engine.dispatchEvent(EventType.containerStarted, { container: this });\n                this.play();\n                resolve();\n            };\n            this._delayTimeout = setTimeout(() => void start(), this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop?.();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(EventType.containerStopped, { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this._responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this._responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners?.forEach(handler => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener), minIndex = 0;\n        if (idx < minIndex) {\n            return;\n        }\n        const deleteCount = 1;\n        if (length === deleteCount) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, deleteCount);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants.js\";\nimport { executeOnSingleOrMultiple, getLogger, itemFromSingleOrMultiple } from \"../Utils/Utils.js\";\nimport { Container } from \"./Container.js\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher.js\";\nimport { EventType } from \"../Enums/Types/EventType.js\";\nimport { getRandom } from \"../Utils/NumberUtils.js\";\nasync function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = await Promise.all([...initializers.values()].map(t => t(container)));\n        map.set(container, res);\n    }\n    return res;\n}\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return (await response.json());\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nconst generatedTrue = \"true\", generatedFalse = \"false\", canvasTag = \"canvas\", getCanvasFromContainer = (domContainer) => {\n    let canvasEl;\n    if (domContainer instanceof HTMLCanvasElement || domContainer.tagName.toLowerCase() === canvasTag) {\n        canvasEl = domContainer;\n        if (!canvasEl.dataset[generatedAttribute]) {\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n    }\n    else {\n        const existingCanvases = domContainer.getElementsByTagName(canvasTag);\n        if (existingCanvases.length) {\n            const firstIndex = 0;\n            canvasEl = existingCanvases[firstIndex];\n            canvasEl.dataset[generatedAttribute] = generatedFalse;\n        }\n        else {\n            canvasEl = document.createElement(canvasTag);\n            canvasEl.dataset[generatedAttribute] = generatedTrue;\n            domContainer.appendChild(canvasEl);\n        }\n    }\n    const fullPercent = \"100%\";\n    if (!canvasEl.style.width) {\n        canvasEl.style.width = fullPercent;\n    }\n    if (!canvasEl.style.height) {\n        canvasEl.style.height = fullPercent;\n    }\n    return canvasEl;\n}, getDomContainer = (id, source) => {\n    let domContainer = source ?? document.getElementById(id);\n    if (domContainer) {\n        return domContainer;\n    }\n    domContainer = document.createElement(\"div\");\n    domContainer.id = id;\n    domContainer.dataset[generatedAttribute] = generatedTrue;\n    document.body.append(domContainer);\n    return domContainer;\n};\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.effectDrawers = new Map();\n        this.shapeDrawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get items() {\n        return this._domArray;\n    }\n    get version() {\n        return \"3.5.0\";\n    }\n    addConfig(config) {\n        const key = config.key ?? config.name ?? \"default\";\n        this._configs.set(key, config);\n        this._eventDispatcher.dispatchEvent(EventType.configAdded, { data: { name: key, config } });\n    }\n    async addEffect(effect, drawer, refresh = true) {\n        executeOnSingleOrMultiple(effect, type => {\n            if (!this.getEffectDrawer(type)) {\n                this.effectDrawers.set(type, drawer);\n            }\n        });\n        await this.refresh(refresh);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this._initializers.interactors.set(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this._initializers.movers.set(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this._initializers.updaters.set(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        if (!this.getPathGenerator(name)) {\n            this.pathGenerators.set(name, generator);\n        }\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        if (override || !this.getPreset(preset)) {\n            this.presets.set(preset, options);\n        }\n        await this.refresh(refresh);\n    }\n    async addShape(drawer, refresh = true) {\n        for (const validType of drawer.validTypes) {\n            if (this.getShapeDrawer(validType)) {\n                continue;\n            }\n            this.shapeDrawers.set(validType, drawer);\n        }\n        await this.refresh(refresh);\n    }\n    clearPlugins(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this.items;\n    }\n    domItem(index) {\n        return this.item(index);\n    }\n    async getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (plugin.needsPlugin(container.actualOptions)) {\n                res.set(plugin.id, await plugin.getPlugin(container));\n            }\n        }\n        return res;\n    }\n    getEffectDrawer(type) {\n        return this.effectDrawers.get(type);\n    }\n    async getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    async getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find(t => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.shapeDrawers.get(type);\n    }\n    getSupportedEffects() {\n        return this.effectDrawers.keys();\n    }\n    getSupportedShapes() {\n        return this.shapeDrawers.keys();\n    }\n    async getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    item(index) {\n        const { items } = this, item = items[index];\n        if (!item || item.destroyed) {\n            const deleteCount = 1;\n            items.splice(index, deleteCount);\n            return;\n        }\n        return item;\n    }\n    async load(params) {\n        const randomFactor = 10000, id = params.id ?? params.element?.id ?? `tsparticles${Math.floor(getRandom() * randomFactor)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        const currentOptions = itemFromSingleOrMultiple(options, index), { items } = this, oldIndex = items.findIndex(v => v.id.description === id), minIndex = 0, newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= minIndex) {\n            const old = this.item(oldIndex), one = 1, none = 0, deleteCount = old ? one : none;\n            if (old && !old.destroyed) {\n                old.destroy(false);\n            }\n            items.splice(oldIndex, deleteCount, newItem);\n        }\n        else {\n            items.push(newItem);\n        }\n        const domContainer = getDomContainer(id, params.element), canvasEl = getCanvasFromContainer(domContainer);\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    loadOptions(options, sourceOptions) {\n        this.plugins.forEach(plugin => plugin.loadOptions?.(options, sourceOptions));\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        updaters.forEach(updater => updater.loadOptions?.(options, ...sourceOptions));\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        await Promise.all(this.items.map(t => t.refresh()));\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    setOnClickHandler(callback) {\n        const { items } = this;\n        if (!items.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        items.forEach(item => item.addClickHandler(callback));\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils.js\";\nvar HslIndexes;\n(function (HslIndexes) {\n    HslIndexes[HslIndexes[\"h\"] = 1] = \"h\";\n    HslIndexes[HslIndexes[\"s\"] = 2] = \"s\";\n    HslIndexes[HslIndexes[\"l\"] = 3] = \"l\";\n    HslIndexes[HslIndexes[\"a\"] = 5] = \"a\";\n})(HslIndexes || (HslIndexes = {}));\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), minLength = 4, defaultAlpha = 1, radix = 10;\n        return result\n            ? hslaToRgba({\n                a: result.length > minLength ? parseAlpha(result[HslIndexes.a]) : defaultAlpha,\n                h: parseInt(result[HslIndexes.h], radix),\n                l: parseInt(result[HslIndexes.l], radix),\n                s: parseInt(result[HslIndexes.s], radix),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils.js\";\nvar RgbIndexes;\n(function (RgbIndexes) {\n    RgbIndexes[RgbIndexes[\"r\"] = 1] = \"r\";\n    RgbIndexes[RgbIndexes[\"g\"] = 2] = \"g\";\n    RgbIndexes[RgbIndexes[\"b\"] = 3] = \"b\";\n    RgbIndexes[RgbIndexes[\"a\"] = 5] = \"a\";\n})(RgbIndexes || (RgbIndexes = {}));\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input), radix = 10, minLength = 4, defaultAlpha = 1;\n        return result\n            ? {\n                a: result.length > minLength ? parseAlpha(result[RgbIndexes.a]) : defaultAlpha,\n                b: parseInt(result[RgbIndexes.b], radix),\n                g: parseInt(result[RgbIndexes.g], radix),\n                r: parseInt(result[RgbIndexes.r], radix),\n            }\n            : undefined;\n    }\n}\n","export var RotateDirection;\n(function (RotateDirection) {\n    RotateDirection[\"clockwise\"] = \"clockwise\";\n    RotateDirection[\"counterClockwise\"] = \"counter-clockwise\";\n    RotateDirection[\"random\"] = \"random\";\n})(RotateDirection || (RotateDirection = {}));\n","export var GradientType;\n(function (GradientType) {\n    GradientType[\"linear\"] = \"linear\";\n    GradientType[\"radial\"] = \"radial\";\n    GradientType[\"random\"] = \"random\";\n})(GradientType || (GradientType = {}));\n","export var EasingType;\n(function (EasingType) {\n    EasingType[\"easeInBack\"] = \"ease-in-back\";\n    EasingType[\"easeInCirc\"] = \"ease-in-circ\";\n    EasingType[\"easeInCubic\"] = \"ease-in-cubic\";\n    EasingType[\"easeInLinear\"] = \"ease-in-linear\";\n    EasingType[\"easeInQuad\"] = \"ease-in-quad\";\n    EasingType[\"easeInQuart\"] = \"ease-in-quart\";\n    EasingType[\"easeInQuint\"] = \"ease-in-quint\";\n    EasingType[\"easeInExpo\"] = \"ease-in-expo\";\n    EasingType[\"easeInSine\"] = \"ease-in-sine\";\n    EasingType[\"easeOutBack\"] = \"ease-out-back\";\n    EasingType[\"easeOutCirc\"] = \"ease-out-circ\";\n    EasingType[\"easeOutCubic\"] = \"ease-out-cubic\";\n    EasingType[\"easeOutLinear\"] = \"ease-out-linear\";\n    EasingType[\"easeOutQuad\"] = \"ease-out-quad\";\n    EasingType[\"easeOutQuart\"] = \"ease-out-quart\";\n    EasingType[\"easeOutQuint\"] = \"ease-out-quint\";\n    EasingType[\"easeOutExpo\"] = \"ease-out-expo\";\n    EasingType[\"easeOutSine\"] = \"ease-out-sine\";\n    EasingType[\"easeInOutBack\"] = \"ease-in-out-back\";\n    EasingType[\"easeInOutCirc\"] = \"ease-in-out-circ\";\n    EasingType[\"easeInOutCubic\"] = \"ease-in-out-cubic\";\n    EasingType[\"easeInOutLinear\"] = \"ease-in-out-linear\";\n    EasingType[\"easeInOutQuad\"] = \"ease-in-out-quad\";\n    EasingType[\"easeInOutQuart\"] = \"ease-in-out-quart\";\n    EasingType[\"easeInOutQuint\"] = \"ease-in-out-quint\";\n    EasingType[\"easeInOutExpo\"] = \"ease-in-out-expo\";\n    EasingType[\"easeInOutSine\"] = \"ease-in-out-sine\";\n})(EasingType || (EasingType = {}));\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ExternalInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.external;\n        this.container = container;\n    }\n}\n","import { InteractorType } from \"../../Enums/Types/InteractorType.js\";\nexport class ParticlesInteractorBase {\n    constructor(container) {\n        this.type = InteractorType.particles;\n        this.container = container;\n    }\n}\n","import { init } from \"./init.js\";\nimport { isSsr } from \"./Utils/Utils.js\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports.js\";\nexport * from \"./export-types.js\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine.js\";\nimport { HslColorManager } from \"./Utils/HslColorManager.js\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager.js\";\nimport { addColorManager } from \"./Utils/ColorUtils.js\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { jsx as d } from \"react/jsx-runtime\";\nimport { useEffect as m } from \"react\";\nimport { tsParticles as s } from \"@tsparticles/engine\";\nconst f = (t) => {\n  const i = t.id ?? \"tsparticles\";\n  return m(() => {\n    let e;\n    return s.load({ id: i, url: t.url, options: t.options }).then((l) => {\n      var a;\n      e = l, (a = t.particlesLoaded) == null || a.call(t, l);\n    }), () => {\n      e == null || e.destroy();\n    };\n  }, [i, t, t.url, t.options]), /* @__PURE__ */ d(\"div\", { id: i, className: t.className });\n};\nexport {\n  f as default\n};\n","import { tsParticles as i } from \"@tsparticles/engine\";\nimport o from \"./Particles.js\";\nimport \"react/jsx-runtime\";\nimport \"react\";\nasync function n(t) {\n  await t(i);\n}\nexport {\n  o as Particles,\n  o as default,\n  n as initParticlesEngine\n};\n","import { RotateDirection, clamp, getDistance, getDistances, getRandom, getRangeValue, } from \"@tsparticles/engine\";\nconst half = 0.5, minVelocity = 0, identity = 1, moveSpeedFactor = 60, minSpinRadius = 0, spinFactor = 0.01;\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    const hasHDistance = (hDistance && dxFixed >= hDistance) ?? false, hasVDistance = (vDistance && dyFixed >= vDistance) ?? false;\n    if ((hasHDistance || hasVDistance) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y * half - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x * half - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance &&\n            ((pos.x < initialPosition.x && vel.x < minVelocity) || (pos.x > initialPosition.x && vel.x > minVelocity))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance &&\n            ((pos.y < initialPosition.y && vel.y < minVelocity) || (pos.y > initialPosition.y && vel.y > minVelocity))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -identity : identity;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (moveSpeedFactor * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y +=\n            (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (moveSpeedFactor * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > minVelocity &&\n        ((!gravityOptions.inverse && velocity.y >= minVelocity && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= minVelocity && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (identity - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === RotateDirection.clockwise ? Math.cos : Math.sin,\n        y: particle.spin.direction === RotateDirection.clockwise ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height), halfMaxSize = maxCanvasSize * half;\n    if (particle.spin.radius > halfMaxSize) {\n        particle.spin.radius = halfMaxSize;\n        particle.spin.acceleration *= -identity;\n    }\n    else if (particle.spin.radius < minSpinRadius) {\n        particle.spin.radius = minSpinRadius;\n        particle.spin.acceleration *= -identity;\n    }\n    particle.spin.angle += moveSpeed * spinFactor * (identity - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -identity, identity);\n        particle.velocity.y = clamp(particle.velocity.y, -identity, identity);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : identity;\n}\nexport function initSpin(particle) {\n    const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n    if (!spinOptions.enable) {\n        return;\n    }\n    const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinFactor = 0.01, spinCenter = {\n        x: spinPos.x * spinFactor * container.canvas.size.width,\n        y: spinPos.y * spinFactor * container.canvas.size.height,\n    }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n    particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n    const minVelocity = 0;\n    particle.spin = {\n        center: spinCenter,\n        direction: particle.velocity.x >= minVelocity ? RotateDirection.clockwise : RotateDirection.counterClockwise,\n        angle: particle.velocity.angle,\n        radius: distance,\n        acceleration: particle.retina.spinAcceleration,\n    };\n}\n","import { getRangeMax, getRangeValue } from \"@tsparticles/engine\";\nimport { applyDistance, getProximitySpeedFactor, initSpin, move, spin } from \"./Utils.js\";\nconst diffFactor = 2, defaultSizeFactor = 1, defaultDeltaFactor = 1;\nexport class BaseMover {\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio;\n        particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio;\n        particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio;\n        const slowFactor = getProximitySpeedFactor(particle), baseSpeed = particle.retina.moveSpeed * container.retina.reduceFactor, moveDrift = particle.retina.moveDrift, maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : defaultSizeFactor, deltaFactor = delta.factor || defaultDeltaFactor, moveSpeed = (baseSpeed * sizeFactor * slowFactor * deltaFactor) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","const double = 2, doublePI = Math.PI * double, minAngle = 0, origin = { x: 0, y: 0 };\nexport function drawCircle(data) {\n    const { context, particle, radius } = data;\n    if (!particle.circleRange) {\n        particle.circleRange = { min: minAngle, max: doublePI };\n    }\n    const circleRange = particle.circleRange;\n    context.arc(origin.x, origin.y, radius, circleRange.min, circleRange.max, false);\n}\n","import { degToRad, isObject } from \"@tsparticles/engine\";\nimport { drawCircle } from \"./Utils.js\";\nconst sides = 12, maxAngle = 360, minAngle = 0;\nexport class CircleDrawer {\n    constructor() {\n        this.validTypes = [\"circle\"];\n    }\n    draw(data) {\n        drawCircle(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: maxAngle,\n            min: minAngle,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: minAngle,\n                max: degToRad(angle),\n            }\n            : { min: degToRad(angle.min), max: degToRad(angle.max) };\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle.color, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity, pxRatio = 1;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, pxRatio);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / percentDenominator) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const none = 0;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? none) <= none ||\n                ((particle.opacity.maxLoops ?? none) > none &&\n                    (particle.opacity.loops ?? none) < (particle.opacity.maxLoops ?? none))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.opacity) {\n            return;\n        }\n        updateAnimation(particle, particle.opacity, true, particle.options.opacity.animation.destroy, delta);\n    }\n}\n","import { OutMode, calculateBounds, } from \"@tsparticles/engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils.js\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            OutMode.bounce,\n            OutMode.split,\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { OutMode, OutModeDirection, getRangeValue } from \"@tsparticles/engine\";\nconst minVelocity = 0, boundsMin = 0;\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.left && data.direction !== OutModeDirection.right)) {\n        return;\n    }\n    if (data.bounds.right < boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.right &&\n        data.bounds.right >= data.canvasSize.width &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.left && data.bounds.left <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === OutModeDirection.right) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= boundsMin && data.direction === OutModeDirection.left) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== OutMode.bounce && data.outMode !== OutMode.split) ||\n        (data.direction !== OutModeDirection.bottom && data.direction !== OutModeDirection.top)) {\n        return;\n    }\n    if (data.bounds.bottom < boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === OutModeDirection.bottom &&\n        data.bounds.bottom >= data.canvasSize.height &&\n        velocity > minVelocity) ||\n        (data.direction === OutModeDirection.top && data.bounds.top <= boundsMin && velocity < minVelocity)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === OutModeDirection.bottom) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= boundsMin && data.direction === OutModeDirection.top) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === OutMode.split) {\n        data.particle.destroy();\n    }\n}\n","import { OutMode, ParticleOutType, Vector, getDistances, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.destroy];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.normal:\n            case ParticleOutType.outside:\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case ParticleOutType.inside: {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter), { x: vx, y: vy } = particle.velocity;\n                if ((vx < minVelocity && dx > particle.moveCenter.radius) ||\n                    (vy < minVelocity && dy > particle.moveCenter.radius) ||\n                    (vx >= minVelocity && dx < -particle.moveCenter.radius) ||\n                    (vy >= minVelocity && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { OutMode, OutModeDirection, Vector, isPointInside, } from \"@tsparticles/engine\";\nconst minVelocity = 0;\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.none];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === OutModeDirection.left || direction === OutModeDirection.right)) ??\n            (particle.options.move.distance.vertical &&\n                (direction === OutModeDirection.top || direction === OutModeDirection.bottom))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container, canvasSize = container.canvas.size, pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > minVelocity && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < minVelocity && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > minVelocity && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < minVelocity && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === OutModeDirection.bottom) ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === OutModeDirection.top)) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, ParticleOutType, Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"@tsparticles/engine\";\nconst minVelocity = 0, minDistance = 0;\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [OutMode.out];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case ParticleOutType.inside: {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= minVelocity && dx >= minDistance) ||\n                    (vy <= minVelocity && dy >= minDistance) ||\n                    (vx >= minVelocity && dx <= minDistance) ||\n                    (vy >= minVelocity && dy <= minDistance)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case ParticleOutType.outside: {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case ParticleOutType.normal: {\n                        const warp = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === OutModeDirection.right &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === OutModeDirection.left && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!warp) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === OutModeDirection.bottom &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === OutModeDirection.top && nextBounds.bottom < -particle.offset.y) {\n                            if (!warp) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { OutMode, OutModeDirection, } from \"@tsparticles/engine\";\nimport { BounceOutMode } from \"./BounceOutMode.js\";\nimport { DestroyOutMode } from \"./DestroyOutMode.js\";\nimport { NoneOutMode } from \"./NoneOutMode.js\";\nimport { OutOutMode } from \"./OutOutMode.js\";\nconst checkOutMode = (outModes, outMode) => {\n    return (outModes.default === outMode ||\n        outModes.bottom === outMode ||\n        outModes.left === outMode ||\n        outModes.right === outMode ||\n        outModes.top === outMode);\n};\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.container = container;\n        this.updaters = [];\n    }\n    init(particle) {\n        this.updaters = [];\n        const outModes = particle.options.move.outModes;\n        if (checkOutMode(outModes, OutMode.bounce)) {\n            this.updaters.push(new BounceOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.out)) {\n            this.updaters.push(new OutOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.destroy)) {\n            this.updaters.push(new DestroyOutMode(this.container));\n        }\n        else if (checkOutMode(outModes, OutMode.none)) {\n            this.updaters.push(new NoneOutMode(this.container));\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, OutModeDirection.bottom);\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, OutModeDirection.left);\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, OutModeDirection.right);\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, OutModeDirection.top);\n    }\n}\n","import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n    }\n}\n","import { loadBaseMover } from \"@tsparticles/move-base\";\nimport { loadCircleShape } from \"@tsparticles/shape-circle\";\nimport { loadColorUpdater } from \"@tsparticles/updater-color\";\nimport { loadOpacityUpdater } from \"@tsparticles/updater-opacity\";\nimport { loadOutModesUpdater } from \"@tsparticles/updater-out-modes\";\nimport { loadSizeUpdater } from \"@tsparticles/updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover.js\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => {\n        return Promise.resolve(new BaseMover());\n    }, refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer.js\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater.js\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", container => {\n        return Promise.resolve(new ColorUpdater(container));\n    }, refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater.js\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", container => {\n        return Promise.resolve(new OpacityUpdater(container));\n    }, refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater.js\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", container => {\n        return Promise.resolve(new OutOfCanvasUpdater(container));\n    }, refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater.js\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => {\n        return Promise.resolve(new SizeUpdater());\n    }, refresh);\n}\n","import { executeOnSingleOrMultiple, getRangeMax, isInArray, itemFromSingleOrMultiple, loadFont, } from \"@tsparticles/engine\";\nimport { drawEmoji } from \"./Utils.js\";\nconst defaultFont = '\"Twemoji Mozilla\", Apple Color Emoji, \"Segoe UI Emoji\", \"Noto Color Emoji\", \"EmojiOne Color\"';\nexport class EmojiDrawer {\n    constructor() {\n        this.validTypes = [\"emoji\"];\n        this._emojiShapeDict = new Map();\n    }\n    destroy() {\n        for (const [key, emojiData] of this._emojiShapeDict) {\n            if (emojiData instanceof ImageBitmap) {\n                emojiData?.close();\n                this._emojiShapeDict.delete(key);\n            }\n        }\n    }\n    draw(data) {\n        drawEmoji(data);\n    }\n    async init(container) {\n        const options = container.actualOptions, { validTypes } = this;\n        if (!validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n            return;\n        }\n        const promises = [loadFont(defaultFont)], shapeOptions = validTypes\n            .map(t => options.particles.shape.options[t])\n            .find(t => !!t);\n        if (shapeOptions) {\n            executeOnSingleOrMultiple(shapeOptions, shape => {\n                if (shape.font) {\n                    promises.push(loadFont(shape.font));\n                }\n            });\n        }\n        await Promise.all(promises);\n    }\n    particleDestroy(particle) {\n        delete particle.emojiData;\n    }\n    particleInit(container, particle) {\n        const double = 2, shapeData = particle.shapeData;\n        if (!shapeData?.value) {\n            return;\n        }\n        const emoji = itemFromSingleOrMultiple(shapeData.value, particle.randomIndexData), font = shapeData.font ?? defaultFont;\n        if (!emoji) {\n            return;\n        }\n        const key = `${emoji}_${font}`, existingData = this._emojiShapeDict.get(key);\n        if (existingData) {\n            particle.emojiData = existingData;\n            return;\n        }\n        const canvasSize = getRangeMax(particle.size.value) * double;\n        let emojiData;\n        const maxSize = getRangeMax(particle.size.value);\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            const canvas = new OffscreenCanvas(canvasSize, canvasSize), context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(emoji, maxSize, maxSize);\n            emojiData = canvas.transferToImageBitmap();\n        }\n        else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvasSize;\n            canvas.height = canvasSize;\n            const context = canvas.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.font = `400 ${maxSize * double}px ${font}`;\n            context.textBaseline = \"middle\";\n            context.textAlign = \"center\";\n            context.fillText(emoji, maxSize, maxSize);\n            emojiData = canvas;\n        }\n        this._emojiShapeDict.set(key, emojiData);\n        particle.emojiData = emojiData;\n    }\n}\n","export function drawEmoji(data) {\n    const { context, particle, radius, opacity } = data, emojiData = particle.emojiData, double = 2, diameter = radius * double, previousAlpha = context.globalAlpha;\n    if (!emojiData) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(emojiData, -radius, -radius, diameter, diameter);\n    context.globalAlpha = previousAlpha;\n}\n","import { Circle, Vector, clamp, getDistances, getEasing, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = EasingType.easeOutQuad;\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { clickAttract, hoverAttract } from \"./Utils.js\";\nimport { Attract } from \"./Options/Classes/Attract.js\";\nconst attractMode = \"attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== attractMode) {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, { enable: hoverEnabled, mode: hoverMode } = events.onHover, { enable: clickEnabled, mode: clickMode } = events.onClick;\n        if (mouseMoveStatus && hoverEnabled && isInArray(attractMode, hoverMode)) {\n            hoverAttract(this.container, p => this.isEnabled(p));\n        }\n        else if (clickEnabled && isInArray(attractMode, clickMode)) {\n            clickAttract(this.container, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(attractMode, hoverMode) || isInArray(attractMode, clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","import { Circle, DivType, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, rectBounce, } from \"@tsparticles/engine\";\nconst squareExp = 2, half = 0.5, halfPI = Math.PI * half, double = 2, toleranceFactor = 10, minRadius = 0;\nfunction processBounce(container, position, radius, area, enabledCb) {\n    const query = container.particles.quadTree.query(area, enabledCb);\n    for (const particle of query) {\n        if (area instanceof Circle) {\n            circleBounce(circleBounceDataFromParticle(particle), {\n                position,\n                radius,\n                mass: radius ** squareExp * halfPI,\n                velocity: Vector.origin,\n                factor: Vector.origin,\n            });\n        }\n        else if (area instanceof Rectangle) {\n            rectBounce(particle, calculateBounds(position, radius));\n        }\n    }\n}\nfunction singleSelectorBounce(container, selector, div, bounceCb) {\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n        return;\n    }\n    query.forEach(item => {\n        const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n            x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n            y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n        }, radius = elem.offsetWidth * half * pxRatio, tolerance = toleranceFactor * pxRatio, area = div.type === DivType.circle\n            ? new Circle(pos.x, pos.y, radius + tolerance)\n            : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * double, elem.offsetHeight * pxRatio + tolerance * double);\n        bounceCb(pos, radius, area);\n    });\n}\nexport function divBounce(container, divs, bounceMode, enabledCb) {\n    divModeExecute(bounceMode, divs, (selector, div) => singleSelectorBounce(container, selector, div, (pos, radius, area) => processBounce(container, pos, radius, area, enabledCb)));\n}\nexport function mouseBounce(container, enabledCb) {\n    const pxRatio = container.retina.pixelRatio, tolerance = toleranceFactor * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n    if (!radius || radius < minRadius || !mousePos) {\n        return;\n    }\n    processBounce(container, mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance), enabledCb);\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { ExternalInteractorBase, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { divBounce, mouseBounce } from \"./Utils.js\";\nimport { Bounce } from \"./Options/Classes/Bounce.js\";\nconst bounceMode = \"bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(bounceMode, hoverMode)) {\n            mouseBounce(this.container, p => this.isEnabled(p));\n        }\n        else {\n            divBounce(this.container, divs, bounceMode, p => this.isEnabled(p));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((!!mouse.position && events.onHover.enable && isInArray(bounceMode, events.onHover.mode)) ||\n            isDivModeEnabled(bounceMode, divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"@tsparticles/engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, color => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase.js\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { BubbleBase } from \"./BubbleBase.js\";\nimport { BubbleDiv } from \"./BubbleDiv.js\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","export var ProcessBubbleType;\n(function (ProcessBubbleType) {\n    ProcessBubbleType[\"color\"] = \"color\";\n    ProcessBubbleType[\"opacity\"] = \"opacity\";\n    ProcessBubbleType[\"size\"] = \"size\";\n})(ProcessBubbleType || (ProcessBubbleType = {}));\n","import { clamp } from \"@tsparticles/engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, millisecondsToSeconds, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"@tsparticles/engine\";\nimport { Bubble } from \"./Options/Classes/Bubble.js\";\nimport { ProcessBubbleType } from \"./Enums.js\";\nimport { calculateBubbleValue } from \"./Utils.js\";\nconst bubbleMode = \"bubble\", minDistance = 0, defaultClickTime = 0, double = 2, defaultOpacity = 1, ratioOffset = 1, defaultBubbleValue = 0, minRatio = 0, half = 0.5, defaultRatio = 1;\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, p => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime ?? defaultClickTime)) /\n                    millisecondsToSeconds;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * double) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: ProcessBubbleType.size,\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? defaultOpacity,\n                    },\n                    type: ProcessBubbleType.opacity,\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < minDistance || !mousePos) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = ratioOffset - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= minRatio && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, ratioOffset - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? defaultOpacity, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value ?? defaultBubbleValue, type = data.type;\n            if (!bubbleDistance || bubbleDistance < minDistance || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === ProcessBubbleType.size) {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === ProcessBubbleType.opacity) {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === ProcessBubbleType.size) {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === ProcessBubbleType.opacity) {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, p => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, defaultRatio, divBubble);\n                    this._hoverBubbleOpacity(particle, defaultRatio, divBubble);\n                    this._hoverBubbleColor(particle, defaultRatio, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== bubbleMode) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(bubbleMode, hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(bubbleMode, clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(bubbleMode, divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(bubbleMode, onDiv);\n        if (!(divBubble || (onHover.enable && !!mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(bubbleMode, onHover.mode) || isInArray(bubbleMode, onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks.js\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { clamp, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"@tsparticles/engine\";\nconst gradientMin = 0, gradientMax = 1, defaultLinksWidth = 0;\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(gradientMin, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(clamp(gradStop, gradientMin, gradientMax), getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(gradientMax, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw(ctx => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? defaultLinksWidth, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"@tsparticles/engine\";\nimport { Connect } from \"./Options/Classes/Connect.js\";\nimport { drawConnection } from \"./Utils.js\";\nconst connectMode = \"connect\", minDistance = 0;\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position, { connectModeDistance, connectModeRadius } = container.retina;\n            if (!connectModeDistance ||\n                connectModeDistance < minDistance ||\n                !connectModeRadius ||\n                connectModeRadius < minDistance ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n            query.forEach((p1, i) => {\n                const pos1 = p1.getPosition(), indexOffset = 1;\n                for (const p2 of query.slice(i + indexOffset)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n            });\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(connectMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks.js\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"@tsparticles/engine\";\nconst defaultWidth = 0;\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw(ctx => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? defaultWidth, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Grab } from \"./Options/Classes/Grab.js\";\nimport { drawGrab } from \"./Utils.js\";\nconst grabMode = \"grab\", minDistance = 0, minOpacity = 0;\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < minDistance) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= minOpacity) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(grabMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"@tsparticles/engine\";\nconst pauseMode = \"pause\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pauseMode) {\n                return;\n            }\n            const container = this.container;\n            if (container.animationStatus) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"@tsparticles/engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map(t => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"@tsparticles/engine\";\nimport { Push } from \"./Options/Classes/Push.js\";\nconst pushMode = \"push\", minQuantity = 0;\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== pushMode) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= minQuantity) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            void container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"@tsparticles/engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"@tsparticles/engine\";\nimport { Remove } from \"./Options/Classes/Remove.js\";\nconst removeMode = \"remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== removeMode) {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { EasingType } from \"@tsparticles/engine\";\nexport class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = EasingType.easeOutQuad;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase.js\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"@tsparticles/engine\";\nimport { RepulseBase } from \"./RepulseBase.js\";\nimport { RepulseDiv } from \"./RepulseDiv.js\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, div => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, DivType, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, millisecondsToSeconds, mouseMoveEvent, } from \"@tsparticles/engine\";\nimport { Repulse } from \"./Options/Classes/Repulse.js\";\nconst repulseMode = \"repulse\", minDistance = 0, repulseRadiusFactor = 6, repulseRadiusPower = 3, squarePower = 2, minRadius = 0, minSpeed = 0, easingOffset = 1, half = 0.5;\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse ?? { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < minDistance) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / repulseRadiusFactor, repulseRadiusPower), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** squarePower, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < minRadius || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, p => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const { easing, speed, factor, maxSpeed } = repulseOptions, easingFunc = getEasing(easing), velocity = (divRepulse?.speed ?? speed) * factor;\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), repulseFactor = clamp(easingFunc(easingOffset - distance / repulseRadius) * velocity, minSpeed, maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * repulseFactor, !distance ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach(item => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth * half) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight * half) * pxRatio,\n                }, repulseRadius = elem.offsetWidth * half * pxRatio, area = div.type === DivType.circle\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== repulseMode) {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * millisecondsToSeconds);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(repulseMode, hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(repulseMode, clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(repulseMode, divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(repulseMode, divs);\n        if (!(divRepulse || (hover.enable && !!mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(repulseMode, hoverMode) || isInArray(repulseMode, clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"@tsparticles/engine\";\nimport { Slow } from \"./Options/Classes/Slow.js\";\nconst slowMode = \"slow\", minRadius = 0;\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(slowMode, events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < minRadius || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"@tsparticles/engine\";\nconst stringStart = 0, defaultOpacity = 1;\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(stringStart, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? defaultOpacity), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor,\n        source: imageData.src,\n    };\n    return new Promise(resolve => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        const errorHandler = async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        };\n        img.addEventListener(\"error\", () => void errorHandler());\n        img.src = url;\n    });\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        const increment = 2, previous = 1, shift = 8;\n        this.pos += increment;\n        return this.data[this.pos - increment] + (this.data[this.pos - previous] << shift);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        const minCount = 0, emptySize = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= minCount; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== emptySize);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = this.data[this.pos], len = 0;\n        const emptySize = 0, increment = 1;\n        for (let offset = 0; size !== emptySize; offset += size + increment, size = this.data[this.pos + offset]) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        size = this.data[this.pos++];\n        for (let i = 0; size !== emptySize; size = this.data[this.pos++]) {\n            for (let count = size; --count >= emptySize; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (const increment = 1, noData = 0; this.data[this.pos] !== noData; this.pos += this.data[this.pos] + increment) {\n        }\n        this.pos++;\n    }\n}\n","export var DisposalMethod;\n(function (DisposalMethod) {\n    DisposalMethod[DisposalMethod[\"Replace\"] = 0] = \"Replace\";\n    DisposalMethod[DisposalMethod[\"Combine\"] = 1] = \"Combine\";\n    DisposalMethod[DisposalMethod[\"RestoreBackground\"] = 2] = \"RestoreBackground\";\n    DisposalMethod[DisposalMethod[\"RestorePrevious\"] = 3] = \"RestorePrevious\";\n    DisposalMethod[DisposalMethod[\"UndefinedA\"] = 4] = \"UndefinedA\";\n    DisposalMethod[DisposalMethod[\"UndefinedB\"] = 5] = \"UndefinedB\";\n    DisposalMethod[DisposalMethod[\"UndefinedC\"] = 6] = \"UndefinedC\";\n    DisposalMethod[DisposalMethod[\"UndefinedD\"] = 7] = \"UndefinedD\";\n})(DisposalMethod || (DisposalMethod = {}));\n","export var GIFDataHeaders;\n(function (GIFDataHeaders) {\n    GIFDataHeaders[GIFDataHeaders[\"Extension\"] = 33] = \"Extension\";\n    GIFDataHeaders[GIFDataHeaders[\"ApplicationExtension\"] = 255] = \"ApplicationExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"GraphicsControlExtension\"] = 249] = \"GraphicsControlExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"PlainTextExtension\"] = 1] = \"PlainTextExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"CommentExtension\"] = 254] = \"CommentExtension\";\n    GIFDataHeaders[GIFDataHeaders[\"Image\"] = 44] = \"Image\";\n    GIFDataHeaders[GIFDataHeaders[\"EndOfFile\"] = 59] = \"EndOfFile\";\n})(GIFDataHeaders || (GIFDataHeaders = {}));\n","import { loadImage } from \"../Utils.js\";\nimport { InterlaceOffsets, InterlaceSteps } from \"./Constants.js\";\nimport { ByteStream } from \"./ByteStream.js\";\nimport { DisposalMethod } from \"./Enums/DisposalMethod.js\";\nimport { GIFDataHeaders } from \"./Types/GIFDataHeaders.js\";\nconst origin = {\n    x: 0,\n    y: 0,\n}, defaultFrame = 0, half = 0.5, initialTime = 0, firstIndex = 0, defaultLoopCount = 0;\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nfunction parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.GraphicsControlExtension: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case GIFDataHeaders.ApplicationExtension: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case GIFDataHeaders.CommentExtension: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case GIFDataHeaders.PlainTextExtension: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        if (index !== getTransparencyIndex(null)) {\n            return { r, g, b, a: 255 };\n        }\n        return { r, g, b, a: avgAlpha ? ~~((r + g + b) / 3) : 0 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                let pixelPos = 0, lineIndex = 0, exit = false;\n                while (!exit) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (const item of dic[code]) {\n                            const { r, g, b, a } = getColor(item);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            exit = true;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        let code = 0, size = minCodeSize + 1, pos = 0, pixelPos = -4, exit = false;\n        const dic = [[0]];\n        while (!exit) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    exit = true;\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (const item of dic[code]) {\n                    const { r, g, b, a } = getColor(item);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case GIFDataHeaders.EndOfFile:\n            return true;\n        case GIFDataHeaders.Image:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case GIFDataHeaders.Extension:\n            parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: DisposalMethod.Replace,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\nexport function drawGif(data) {\n    const { context, radius, particle, delta } = data, image = particle.image;\n    if (!image?.gifData || !image.gif) {\n        return;\n    }\n    const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n    if (!offscreenContext) {\n        throw new Error(\"could not create offscreen canvas context\");\n    }\n    offscreenContext.imageSmoothingQuality = \"low\";\n    offscreenContext.imageSmoothingEnabled = false;\n    offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n    if (particle.gifLoopCount === undefined) {\n        particle.gifLoopCount = image.gifLoopCount ?? defaultLoopCount;\n    }\n    let frameIndex = particle.gifFrame ?? defaultFrame;\n    const pos = { x: -image.gifData.width * half, y: -image.gifData.height * half }, frame = image.gifData.frames[frameIndex];\n    if (particle.gifTime === undefined) {\n        particle.gifTime = initialTime;\n    }\n    if (!frame.bitmap) {\n        return;\n    }\n    context.scale(radius / image.gifData.width, radius / image.gifData.height);\n    switch (frame.disposalMethod) {\n        case DisposalMethod.UndefinedA:\n        case DisposalMethod.UndefinedB:\n        case DisposalMethod.UndefinedC:\n        case DisposalMethod.UndefinedD:\n        case DisposalMethod.Replace:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            break;\n        case DisposalMethod.Combine:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            break;\n        case DisposalMethod.RestoreBackground:\n            offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n            context.drawImage(offscreenCanvas, pos.x, pos.y);\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n            if (!image.gifData.globalColorTable.length) {\n                offscreenContext.putImageData(image.gifData.frames[firstIndex].image, pos.x + frame.left, pos.y + frame.top);\n            }\n            else {\n                offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n            }\n            break;\n        case DisposalMethod.RestorePrevious:\n            {\n                const previousImageData = offscreenContext.getImageData(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                context.drawImage(offscreenCanvas, pos.x, pos.y);\n                offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n                offscreenContext.putImageData(previousImageData, origin.x, origin.y);\n            }\n            break;\n    }\n    particle.gifTime += delta.value;\n    if (particle.gifTime > frame.delayTime) {\n        particle.gifTime -= frame.delayTime;\n        if (++frameIndex >= image.gifData.frames.length) {\n            if (--particle.gifLoopCount <= defaultLoopCount) {\n                return;\n            }\n            frameIndex = firstIndex;\n            offscreenContext.clearRect(origin.x, origin.y, offscreenCanvas.width, offscreenCanvas.height);\n        }\n        particle.gifFrame = frameIndex;\n    }\n    context.scale(image.gifData.width / radius, image.gifData.height / radius);\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? defaultLoopCount;\n        if (!image.gifLoopCount) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\n","import { errorPrefix } from \"@tsparticles/engine\";\nimport { replaceImageColor } from \"./Utils.js\";\nimport { drawGif } from \"./GifUtils/Utils.js\";\nconst double = 2, defaultAlpha = 1, sides = 12, defaultRatio = 1;\nexport class ImageDrawer {\n    constructor(engine) {\n        this.validTypes = [\"image\", \"images\"];\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(data) {\n        const { context, radius, particle, opacity } = data, image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            drawGif(data);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            }, diameter = radius * double;\n            context.drawImage(element, pos.x, pos.y, diameter, diameter / ratio);\n        }\n        context.globalAlpha = defaultAlpha;\n    }\n    getSidesCount() {\n        return sides;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            void this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData;\n        if (!imageData) {\n            return;\n        }\n        const color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        void (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height\n                        ? imageData.width / imageData.height\n                        : image.ratio ?? defaultRatio,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.shapeFill, close = imageData.close ?? particle.shapeClose, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.shapeFill = imageShape.fill;\n            particle.shapeClose = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload.js\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    async getPlugin() {\n        await Promise.resolve();\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source?.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find(t => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadImage } from \"./Utils.js\";\nimport { ImageDrawer } from \"./ImageDrawer.js\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader.js\";\nimport { errorPrefix } from \"@tsparticles/engine\";\nimport { loadGifImage } from \"./GifUtils/Utils.js\";\nconst extLength = 3;\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - extLength),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            let imageFunc;\n            if (data.gif) {\n                imageFunc = loadGifImage;\n            }\n            else {\n                imageFunc = data.replaceColor ? downloadSvgImage : loadImage;\n            }\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape(new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"@tsparticles/engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay.js\";\nimport { LifeDuration } from \"./LifeDuration.js\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, millisecondsToSeconds, } from \"@tsparticles/engine\";\nimport { Life } from \"./Options/Classes/Life.js\";\nimport { updateLife } from \"./Utils.js\";\nconst noTime = 0, identity = 1, infiniteValue = -1;\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            delayTime: noTime,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? identity : getRandom())) /\n                    container.retina.reduceFactor) *\n                    millisecondsToSeconds\n                : noTime,\n            time: noTime,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= noTime) {\n            particle.life.duration = infiniteValue;\n        }\n        if (particle.life.count <= noTime) {\n            particle.life.count = infiniteValue;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > noTime;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        updateLife(particle, delta, this.container.canvas.size);\n    }\n}\n","import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n","import { drawLine } from \"./Utils.js\";\nconst sides = 1;\nexport class LineDrawer {\n    constructor() {\n        this.validTypes = [\"line\"];\n    }\n    draw(data) {\n        drawLine(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","export function drawLine(data) {\n    const { context, particle, radius } = data, shapeData = particle.shapeData, centerY = 0;\n    context.moveTo(-radius, centerY);\n    context.lineTo(radius, centerY);\n    context.lineCap = shapeData?.cap ?? \"butt\";\n}\n","import { isSsr } from \"@tsparticles/engine\";\nconst half = 0.5;\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width * half,\n            y: canvasSize.height * half,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","import { ParticlesInteractorBase, getDistances, getRangeValue, } from \"@tsparticles/engine\";\nconst attractFactor = 1000, identity = 1;\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1) {\n        const container = this.container;\n        if (p1.attractDistance === undefined) {\n            p1.attractDistance = getRangeValue(p1.options.move.attract.distance) * container.retina.pixelRatio;\n        }\n        const distance = p1.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * attractFactor), ay = dy / (rotate.y * attractFactor), p1Factor = p2.size.value / p1.size.value, p2Factor = identity / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"@tsparticles/engine\";\nconst half = 0.5, absorbFactor = 10, minAbsorbFactor = 0;\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / absorbFactor, minAbsorbFactor, r2);\n    p1.size.value += factor * half;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"@tsparticles/engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { CollisionMode } from \"@tsparticles/engine\";\nimport { absorb } from \"./Absorb.js\";\nimport { bounce } from \"./Bounce.js\";\nimport { destroy } from \"./Destroy.js\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case CollisionMode.absorb: {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case CollisionMode.bounce: {\n            bounce(p1, p2);\n            break;\n        }\n        case CollisionMode.destroy: {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce.js\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"@tsparticles/engine\";\nconst double = 2;\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize, { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * double);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * double, rect.size.height * double);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"@tsparticles/engine\";\nimport { LinksShadow } from \"./LinksShadow.js\";\nimport { LinksTriangle } from \"./LinksTriangle.js\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"@tsparticles/engine\";\nimport { CircleWarp } from \"./CircleWarp.js\";\nimport { Links } from \"./Options/Classes/Links.js\";\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = p1 => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some(t => t.destination === p2) ||\n                p2.links.some(t => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"@tsparticles/engine\";\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map(t => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"@tsparticles/engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils.js\";\nconst minOpacity = 0, minWidth = 0, minDistance = 0, half = 0.5, maxFrequency = 1;\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw(ctx => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? minWidth, maxDistance = p1.retina.linksDistance ?? minDistance, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) * half;\n            if (opacityTriangle <= minOpacity) {\n                return;\n            }\n            container.canvas.draw(ctx => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? minDistance;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter(t => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination), minCount = 0;\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex(l => l.destination === t.destination) >= minCount);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links?.length) {\n            return;\n        }\n        const p1Links = links.filter(l => options.links &&\n            (options.links.frequency >= maxFrequency ||\n                this._getLinkFrequency(particle, l.destination) <= options.links.frequency));\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > minOpacity && (particle.retina.linksWidth ?? minWidth) > minWidth) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n        await Promise.resolve();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance.js\";\nexport class LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return Promise.resolve(new LinkInstance(container));\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { loadLinksInteraction } from \"./interaction.js\";\nimport { loadLinksPlugin } from \"./plugin.js\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links.js\";\nexport * from \"./Options/Classes/LinksShadow.js\";\nexport * from \"./Options/Classes/LinksTriangle.js\";\nexport * from \"./Options/Interfaces/ILinks.js\";\nexport * from \"./Options/Interfaces/ILinksShadow.js\";\nexport * from \"./Options/Interfaces/ILinksTriangle.js\";\n","import { Linker } from \"./Linker.js\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", async (container) => {\n        return Promise.resolve(new Linker(container));\n    }, refresh);\n}\n","import { LinksPlugin } from \"./LinksPlugin.js\";\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { degToRad } from \"@tsparticles/engine\";\nconst piDeg = 180, origin = { x: 0, y: 0 }, sidesOffset = 2;\nexport function drawPolygon(data, start, side) {\n    const { context } = data, sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (piDeg * (decimalSides - sidesOffset)) / decimalSides, interiorAngle = Math.PI - degToRad(interiorAngleDegrees);\n    if (!context) {\n        return;\n    }\n    context.beginPath();\n    context.translate(start.x, start.y);\n    context.moveTo(origin.x, origin.y);\n    for (let i = 0; i < sideCount; i++) {\n        context.lineTo(side.length, origin.y);\n        context.translate(side.length, origin.y);\n        context.rotate(interiorAngle);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawPolygon } from \"./Utils.js\";\nconst defaultSides = 5;\nexport class PolygonDrawerBase {\n    draw(data) {\n        const { particle, radius } = data, start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius);\n        drawPolygon(data, start, side);\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? defaultSides));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst sidesCenterFactor = 3.5, yFactor = 2.66, sidesFactor = 3;\nexport class PolygonDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"polygon\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / sidesCenterFactor),\n            y: -radius / (yFactor / sidesCenterFactor),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * yFactor) / (sides / sidesFactor),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase.js\";\nconst yFactor = 1.66, sides = 3, double = 2;\nexport class TriangleDrawer extends PolygonDrawerBase {\n    constructor() {\n        super(...arguments);\n        this.validTypes = [\"triangle\"];\n    }\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / yFactor,\n        };\n    }\n    getSidesCount() {\n        return sides;\n    }\n    getSidesData(particle, radius) {\n        const diameter = radius * double;\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: diameter,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer.js\";\nimport { TriangleDrawer } from \"./TriangleDrawer.js\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"@tsparticles/engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { RotateDirection, ValueWithRandom, } from \"@tsparticles/engine\";\nimport { RotateAnimation } from \"./RotateAnimation.js\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = RotateDirection.clockwise;\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { AnimationStatus, DestroyType, RotateDirection, degToRad, getRandom, getRangeValue, updateAnimation, } from \"@tsparticles/engine\";\nimport { Rotate } from \"./Options/Classes/Rotate.js\";\nconst double = 2, doublePI = Math.PI * double, identity = 1, doublePIDeg = 360;\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: degToRad(getRangeValue(rotateOptions.value)),\n            min: 0,\n            max: doublePI,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === RotateDirection.random) {\n            const index = Math.floor(getRandom() * double), minIndex = 0;\n            rotateDirection = index > minIndex ? RotateDirection.counterClockwise : RotateDirection.clockwise;\n        }\n        switch (rotateDirection) {\n            case RotateDirection.counterClockwise:\n            case \"counterClockwise\":\n                particle.rotate.status = AnimationStatus.decreasing;\n                break;\n            case RotateDirection.clockwise:\n                particle.rotate.status = AnimationStatus.increasing;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = identity - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / doublePIDeg) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && (!!rotate.value || rotate.animation.enable || rotate.path);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        particle.isRotating = !!particle.rotate;\n        if (!particle.rotate) {\n            return;\n        }\n        updateAnimation(particle, particle.rotate, false, DestroyType.none, delta);\n        particle.rotation = particle.rotate.value;\n    }\n}\n","const fixFactorSquared = 2, fixFactor = Math.sqrt(fixFactorSquared), double = 2;\nexport function drawSquare(data) {\n    const { context, radius } = data, fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * double;\n    context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n}\n","import { drawSquare } from \"./Utils.js\";\nconst sides = 4;\nexport class SquareDrawer {\n    constructor() {\n        this.validTypes = [\"edge\", \"square\"];\n    }\n    draw(data) {\n        drawSquare(data);\n    }\n    getSidesCount() {\n        return sides;\n    }\n}\n","const defaultInset = 2, origin = { x: 0, y: 0 };\nexport function drawStar(data) {\n    const { context, particle, radius } = data, sides = particle.sides, inset = particle.starInset ?? defaultInset;\n    context.moveTo(origin.x, origin.y - radius);\n    for (let i = 0; i < sides; i++) {\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius * inset);\n        context.rotate(Math.PI / sides);\n        context.lineTo(origin.x, origin.y - radius);\n    }\n}\n","import { getRangeValue, } from \"@tsparticles/engine\";\nimport { drawStar } from \"./Utils.js\";\nconst defaultInset = 2, defaultSides = 5;\nexport class StarDrawer {\n    constructor() {\n        this.validTypes = [\"star\"];\n    }\n    draw(data) {\n        drawStar(data);\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? defaultSides));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData;\n        particle.starInset = getRangeValue(star?.inset ?? defaultInset);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n    }\n}\n","import { loadBasic } from \"@tsparticles/basic\";\nimport { loadEasingQuadPlugin } from \"@tsparticles/plugin-easing-quad\";\nimport { loadEmojiShape } from \"@tsparticles/shape-emoji\";\nimport { loadExternalAttractInteraction } from \"@tsparticles/interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"@tsparticles/interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"@tsparticles/interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"@tsparticles/interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"@tsparticles/interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"@tsparticles/interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"@tsparticles/interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"@tsparticles/interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"@tsparticles/interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"@tsparticles/interaction-external-slow\";\nimport { loadImageShape } from \"@tsparticles/shape-image\";\nimport { loadLifeUpdater } from \"@tsparticles/updater-life\";\nimport { loadLineShape } from \"@tsparticles/shape-line\";\nimport { loadParallaxMover } from \"@tsparticles/move-parallax\";\nimport { loadParticlesAttractInteraction } from \"@tsparticles/interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"@tsparticles/interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"@tsparticles/interaction-particles-links\";\nimport { loadPolygonShape } from \"@tsparticles/shape-polygon\";\nimport { loadRotateUpdater } from \"@tsparticles/updater-rotate\";\nimport { loadSquareShape } from \"@tsparticles/shape-square\";\nimport { loadStarShape } from \"@tsparticles/shape-star\";\nimport { loadStrokeColorUpdater } from \"@tsparticles/updater-stroke-color\";\nexport async function loadSlim(engine, refresh = true) {\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadEmojiShape(engine, false);\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover.js\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => {\n        return Promise.resolve(new ParallaxMover());\n    }, refresh);\n}\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", container => {\n        return Promise.resolve(new Attractor(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Attract.js\";\nexport * from \"./Options/Interfaces/IAttract.js\";\n","import { Bouncer } from \"./Bouncer.js\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", container => {\n        return Promise.resolve(new Bouncer(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Bounce.js\";\nexport * from \"./Options/Interfaces/IBounce.js\";\n","import { Bubbler } from \"./Bubbler.js\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", container => {\n        return Promise.resolve(new Bubbler(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/BubbleBase.js\";\nexport * from \"./Options/Classes/BubbleDiv.js\";\nexport * from \"./Options/Classes/Bubble.js\";\nexport * from \"./Options/Interfaces/IBubbleBase.js\";\nexport * from \"./Options/Interfaces/IBubbleDiv.js\";\nexport * from \"./Options/Interfaces/IBubble.js\";\n","import { Connector } from \"./Connector.js\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", container => {\n        return Promise.resolve(new Connector(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Connect.js\";\nexport * from \"./Options/Classes/ConnectLinks.js\";\nexport * from \"./Options/Interfaces/IConnect.js\";\nexport * from \"./Options/Interfaces/IConnectLinks.js\";\n","import { Grabber } from \"./Grabber.js\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", container => {\n        return Promise.resolve(new Grabber(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Grab.js\";\nexport * from \"./Options/Classes/GrabLinks.js\";\nexport * from \"./Options/Interfaces/IGrab.js\";\nexport * from \"./Options/Interfaces/IGrabLinks.js\";\n","import { Pauser } from \"./Pauser.js\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", container => {\n        return Promise.resolve(new Pauser(container));\n    }, refresh);\n}\n","import { Pusher } from \"./Pusher.js\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", container => {\n        return Promise.resolve(new Pusher(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Push.js\";\nexport * from \"./Options/Interfaces/IPush.js\";\n","import { Remover } from \"./Remover.js\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", container => {\n        return Promise.resolve(new Remover(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Remove.js\";\nexport * from \"./Options/Interfaces/IRemove.js\";\n","import { Repulser } from \"./Repulser.js\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", container => {\n        return Promise.resolve(new Repulser(engine, container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/RepulseBase.js\";\nexport * from \"./Options/Classes/RepulseDiv.js\";\nexport * from \"./Options/Classes/Repulse.js\";\nexport * from \"./Options/Interfaces/IRepulseBase.js\";\nexport * from \"./Options/Interfaces/IRepulseDiv.js\";\nexport * from \"./Options/Interfaces/IRepulse.js\";\n","import { Slower } from \"./Slower.js\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", container => {\n        return Promise.resolve(new Slower(container));\n    }, refresh);\n}\nexport * from \"./Options/Classes/Slow.js\";\nexport * from \"./Options/Interfaces/ISlow.js\";\n","import { Attractor } from \"./Attractor.js\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", container => {\n        return Promise.resolve(new Attractor(container));\n    }, refresh);\n}\n","import { Collider } from \"./Collider.js\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", container => {\n        return Promise.resolve(new Collider(container));\n    }, refresh);\n}\n","import { EasingType, addEasing } from \"@tsparticles/engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(EasingType.easeInQuad, value => value ** 2);\n    addEasing(EasingType.easeOutQuad, value => 1 - (1 - value) ** 2);\n    addEasing(EasingType.easeInOutQuad, value => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n    await Promise.resolve();\n}\n","import { EmojiDrawer } from \"./EmojiDrawer.js\";\nexport async function loadEmojiShape(engine, refresh = true) {\n    await engine.addShape(new EmojiDrawer(), refresh);\n}\n","import { LineDrawer } from \"./LineDrawer.js\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer.js\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape(new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer.js\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(new StarDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater.js\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", async (container) => {\n        return Promise.resolve(new LifeUpdater(container));\n    }, refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater.js\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", container => {\n        return Promise.resolve(new RotateUpdater(container));\n    }, refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater.js\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", container => {\n        return Promise.resolve(new StrokeColorUpdater(container));\n    }, refresh);\n}\n"],"names":["generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","percentDenominator","halfRandom","millisecondsToSeconds","MoveDirection","isBoolean","arg","isString","isNumber","isObject","isArray","Array","origin","Vector3d","constructor","xOrCoords","y","z","this","_updateFromAngle","angle","length","x","Math","cos","sin","coords3d","undefined","Error","concat","create","atan2","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","_animationLoop","nextFrame","cb","requestAnimationFrame","cancel","idx","cancelAnimationFrame","easingFunctions","Map","doublePI","PI","addEasing","name","easing","get","set","getEasing","_easingFunctions$get","value","getRandom","clamp","Number","EPSILON","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","degToRad","degrees","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","data","_data$position$x2","_data$position6","_data$position$y2","_data$position7","position","size","width","height","parseAlpha","input","endsWith","parseFloat","AnimationMode","AnimationStatus","DestroyType","OutModeDirection","PixelMode","StartValueType","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","isInArray","array","indexOf","async","loadFont","font","weight","fonts","load","itemFromArray","index","arguments","arrayRandomIndex","isPointInside","point","offset","radius","direction","bounds","inside","bottom","top","left","right","areBoundsInside","calculateBounds","deepExtend","destination","_len","sources","_key","sourceIsArray","key","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","enable","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","options","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","bounceOptions","resH","resV","obj","item","itemFromSingleOrMultiple","useIndex","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decay","increase","status","increasing","decrease","decreasing","autoStatus","auto","startValue","initialValue","getPositionOrSize","positionOrSize","canvasSize","percent","_","rest","updateAnimation","changeDirection","destroyType","delta","_data$maxLoops","_data$loops","_data$maxLoops2","_data$velocity","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","destroyed","minValue","maxValue","destroy","checkDestroy","AlterType","RgbIndexes","randomColorValue","midColorValue","colorManagers","addColorManager","manager","stringToRgba","startsWith","stringPrefix","parseString","hexFixed","replace","g","b","a","result","exec","parseInt","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","s","double","hslToRgb","hsl","hMax","hNormalized","sNormalized","lNormalized","rgbFactor","grayscaleValue","round","channel","temp1","temp2","temp3","temp3Max","phaseThird","red","green","blue","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","_p1$getFillColor","_p2$getFillColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","sync","updateColorValue","range","updateColor","ranges","defaultTransform","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","clear","dimension","clearRect","setTransformValue","newFactor","newValue","_factor$key","setStyle","canvas","style","important","elementStyle","setProperty","Canvas","container","_applyPostDrawUpdaters","updater","_postDrawUpdaters","_updater$afterDraw","afterDraw","call","_applyPreDrawUpdaters","ctx","zOpacity","colorStyles","transform","_preDrawUpdaters","_updater$beforeDraw","getColorStyles","fill","stroke","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","_plugin$resize","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","backgroundMask","coverRgb","coverColor","_coverColorStyle","Promise","resolve","reject","image","img","createElement","addEventListener","_coverImage","evt","src","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","_paintBase","baseColor","draw","fillStyle","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","Node","observe","attributes","originalStyle","_mutationObserver","zIndex","fullScreen","toString","_context","_generated","paint","stop","remove","drawAsync","drawParticle","_particle$getStrokeCo","spawning","pfColor","psColor","_ref","_particle$bubble$opac","_particle$opacity","_particle$strokeOpaci","zIndexOptions","zIndexFactor","zOpacityFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","_transform$a","_transform$b","_transform$b2","_transform$c","_transform$c2","_transform$d","_particle$strokeWidth","composite","shadow","pos","rotation","pathRotation","rotateData","rotating","transformData","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","strokeWidth","lineWidth","strokeStyle","drawData","minStrokeWidth","shape","drawer","shapeDrawers","pixelRatio","retina","shapeClose","shapeFill","drawShape","drawShapeAfterDraw","effect","effectDrawers","drawEffect","resetTransform","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","e","initUpdaters","initPlugins","background","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","_plugin$particleFillC","push","updaters","_ref2","_updater$getColorStyl","loadCanvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","setResizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","InteractivityDetect","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","events","onClick","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","loadTheme","_handleVisibilityChange","_document","pauseOnBlur","hidden","pageHidden","pause","animationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","handleResize","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parent","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lengthOffset","lastTouch","touches","defaultCoordinate","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","EventType","DivType","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","circle","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","ResponsiveMode","ThemeMode","CollisionMode","OutMode","LimitMode","InteractorType","ParticleOutType","Responsive","maxWidth","Infinity","screen","ThemeDefault","any","Theme","AnimationOptions","RangedAnimationOptions","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ValueWithRandom","AnimationValueWithRandom","RangedAnimationValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","Effect","close","_this$options$effect","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","out","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","attract","center","none","drift","gravity","path","outModes","spin","straight","vibrate","warp","OpacityAnimation","Opacity","ParticlesDensity","ParticlesNumberLimit","ParticlesNumber","density","limit","Shadow","Shape","_this$options$shape","SizeAnimation","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","collisions","groups","number","reduceDuplicates","group","Object","keys","hasOwn","_this$groups$group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","_interactor$handleCli","getInteractors","external","particlesInteract","reset","half","randomString","fixOutMode","outMode","checkModes","diameter","coord","maxCoord","setCb","Particle","_this","_calcPosition","_outModes$left","_outModes$right","_outModes$top","_outModes$bottom","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","increment","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","outside","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","darken","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","initialPosition","moveCenter","quarter","topRight","bottomRight","bottomLeft","topLeft","getParticleDirectionAngle","outType","override","_shapeDrawer$particle","unbreakable","inRange","slow","pathGenerator","shapeDrawer","particleDestroy","_plugin$particleDestr","particleDestroyed","_updater$particleDest","dispatchEvent","_this$bubble$color","_this$bubble$radius","_this$bubble$color2","strokeColor","id","overrideOptions","_effectData$fill","_effectData$close","_shapeData$fill","_shapeData$close","_effectDrawer","_shapeDrawer","_shapeDrawer2","_effectDrawer2","_effectDrawer2$partic","_shapeDrawer3","_shapeDrawer3$particl","effectClose","effectFill","lastPathTime","isRotating","misplaced","maxDistance","normal","ignoresResizeRatio","mainOptions","particlesOptions","effectType","shapeType","effectOptions","shapeOptions","_overrideOptions$effe","_overrideOptions$shap","availableEffects","availableShapes","effectData","loadEffectData","shapeData","loadShapeData","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","setLastZIndex","sides","effectDrawer","getEffectDrawer","loadEffect","getShapeDrawer","loadShape","sideCountFunc","getSidesCount","mover","movers","_mover$init","particleInit","_plugin$particleCreat","particleCreated","isInsideCanvas","isVisible","_updater$reset","Point","RangeType","BaseRange","Circle","contains","intersects","distPos","abs","Rectangle","rectangle","rectRange","pow","w","w2","h2","QuadTree","capacity","_subdivide","i","fixedIndex","_subs","_divided","_points","insert","check","queryCircle","queryRectangle","qTreeRectangle","Particles","_addToPool","_pool","_applyDensity","manualCount","_options$number$densi","numberOptions","_limit","_groupLimits","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pop","_nextId","canAdd","_array","_zArray","particleAdded","_removeParticle","zIdx","splice","particleRemoved","_needsSort","_lastZIndex","_interactionManager","_pluginsInitialized","quadTree","addManualParticles","forEach","addParticle","_this$_groupLimits$ge","limitMode","currentCount","countToRemove","wait","update","condition","_plugin$particlesInit","_plugin$particlesInit2","particlesInitialization","groupOptions","j","_groupOptions$number","getMovers","getUpdaters","pathGenerators","nb","redraw","removeAt","quantity","deleted","_resizeFactor","particlesToDelete","Set","_plugin$update","resizeFactor","_plugin$particleUpdat","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","_this$_lastFrameTime","_smooth","_lastFrameTime","initDelta","addLifeTime","alive","Symbol","_delay","_duration","_lifeTime","_firstStart","_paused","_clickHandlers","_sourceOptions","_initialSourceOptions","_options","_eventListeners","_intersectionObserver","IntersectionObserver","safeIntersectionObserver","containerBuilt","addClickHandler","el","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","minCoordinate","radiusX","radiusY","touchCancelHandler","clearClickHandlers","_this$interactivity$e","_effectDrawer$destroy","_shapeDrawer$destroy","clearPlugins","mainArr","items","findIndex","deleteCount","containerDestroyed","refreshTime","frame","fn","_drawAnimationFrame","export","supported","blob","_plugin$handleClickMo","effects","getSupportedEffects","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","_drawer$init","_drawer$init2","_plugin$init","containerInit","_plugin$particlesSetu","particlesSetup","_currentTheme","handle","_plugin$pause","containerPaused","needsUpdate","containerPlay","start","HTMLElement","_plugin$start","containerStarted","_delayTimeout","_plugin$stop","containerStopped","newMaxWidth","_responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","all","values","generatedTrue","generatedFalse","canvasTag","Engine","_configs","_domArray","_eventDispatcher","_initialized","_initializers","presets","configs","config","version","addConfig","_config$key","configAdded","addEffect","addInteractor","interactorInitializer","addMover","moverInitializer","addParticleUpdater","updaterInitializer","addPathGenerator","addPlugin","getPlugin","addPreset","addShape","validType","validTypes","dom","domItem","needsPlugin","params","_params$id","_params$element","url","fallback","response","fetch","ok","json","getDataFromUrl","currentOptions","oldIndex","description","newItem","old","domContainer","getDomContainer","getElementById","body","append","HTMLCanvasElement","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","fullPercent","getCanvasFromContainer","_plugin$loadOptions","_updater$loadOptions","setOnClickHandler","HslIndexes","RotateDirection","GradientType","EasingType","HslColorManager","_colorValue$hsl","_colorValue$hsl2","hsla","rgbResult","hslaToRgba","RgbColorManager","_colorValue$rgb","rgbColor","_colorValue$rgb2","ExternalInteractorBase","ParticlesInteractorBase","tsParticles","rgbColorManager","hslColorManager","f","_t$id","m","then","particlesLoaded","className","identity","_particle$pathGenerat","generate","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_spinOptions$position","spinOptions","spinPos","spinCenter","spinAcceleration","clockwise","counterClockwise","initSpin","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","halfMaxSize","dxFixed","dyFixed","hDistance","vDistance","hasVDistance","vel","applyDistance","CircleDrawer","circleRange","arc","drawCircle","_shapeData$angle","ColorUpdater","hAnimation","sAnimation","lAnimation","OpacityUpdater","opacityOptions","opacityAnimation","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","BounceOutMode","split","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","newPos","sizeValue","nextBounds","checkOutMode","OutOfCanvasUpdater","_updateOutMode","SizeUpdater","sizeAnimation","_particle$retina$size","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","loadBasic","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","defaultFont","EmojiDrawer","_emojiShapeDict","emojiData","ImageBitmap","previousAlpha","drawEmoji","promises","_shapeData$font","emoji","randomIndexData","existingData","OffscreenCanvas","textBaseline","textAlign","fillText","transferToImageBitmap","minFactor","processAttract","attractRadius","area","queryCb","attractOptions","attractFactor","normVec","Attract","easeOutQuad","attractMode","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","enabledCb","hoverAttract","clickAttract","_particle$interactivi","squareExp","halfPI","toleranceFactor","processBounce","divBounce","bounceMode","bounceCb","querySelectorAll","elem","offsetLeft","offsetTop","tolerance","singleSelectorBounce","Bounce","Bouncer","bounceModeDistance","mouseBounce","BubbleBase","BubbleDiv","Bubble","ProcessBubbleType","calculateBubbleValue","particleValue","modeValue","optionsValue","bubbleMode","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","_container$interactiv","_particle$opacity$val","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","_data$particlesObj$va","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","links","gradientMin","gradientMax","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","_p1$retina$linksWidth","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","repulseMode","Repulser","_clickRepulse","_container$repulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","easingFunc","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","stringStart","currentColorRegex","loadImage","loading","Image","downloadSvgImage","svgData","text","replaceImageColor","imageData","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","gif","loaded","replaceColor","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","errorHandler","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","noData","DisposalMethod","GIFDataHeaders","defaultLoopCount","parseColorTable","byteStream","colors","parseBlock","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","EndOfFile","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","exit","last","bitmap","createImageBitmap","parseImageBlock","Extension","GraphicsControlExtension","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","ApplicationExtension","applicationExtension","authenticationCode","applicationExtensions","CommentExtension","comments","PlainTextExtension","plainTextData","charSize","foregroundColor","parseExtensionBlock","loadGifImage","_getGIFLoopAmount","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","Replace","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","images","_particle$gifFrame","offscreenCanvas","offscreenContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","UndefinedA","UndefinedB","UndefinedC","UndefinedD","Combine","RestoreBackground","putImageData","RestorePrevious","previousImageData","getImageData","drawGif","preload","_imageData$replaceCol","_imageData$fill","_imageData$close","_image$ratio","Preload","ImagePreloaderPlugin","preloadOptions","existing","extLength","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","updateLife","LineDrawer","_shapeData$cap","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","attractDistance","ax","ay","p1Factor","p2Factor","absorbFactor","minAbsorbFactor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","ids","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","p3","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","side","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","drawPolygon","getCenter","getSidesData","_polygon$sides","polygon","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","drawSquare","StarDrawer","_particle$starInset","inset","starInset","drawStar","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeAnimation","strokeHslColor","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","easeInQuad","easeInOutQuad","loadEasingQuadPlugin","loadEmojiShape","loadLineShape","loadSquareShape","loadStarShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater"],"sourceRoot":""}